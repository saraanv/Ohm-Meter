
AVRASM ver. 2.1.30  C:\Users\Sara\Desktop\azmicro\frequency-meter\CodeVision\Release\List\frequency.asm Sat Dec 28 11:44:45 2024

C:\Users\Sara\Desktop\azmicro\frequency-meter\CodeVision\Release\List\frequency.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Sara\Desktop\azmicro\frequency-meter\CodeVision\Release\List\frequency.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Sara\Desktop\azmicro\frequency-meter\CodeVision\Release\List\frequency.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': No
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0049 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 3d46
00002b 3325
00002c 322e
00002d 2066      	.DB  0x46,0x3D,0x25,0x33,0x2E,0x32,0x66,0x20
00002e 486b
00002f 007a
000030 3d46
000031 3325      	.DB  0x6B,0x48,0x7A,0x0,0x46,0x3D,0x25,0x33
000032 302e
000033 2066
000034 7a48
000035 4600      	.DB  0x2E,0x30,0x66,0x20,0x48,0x7A,0x0,0x46
000036 7e3d
C:\Users\Sara\Desktop\azmicro\frequency-meter\CodeVision\Release\List\frequency.asm(1125): warning: .cseg .db misalignment - padding zero byte
000037 0000      	.DB  0x3D,0x7E,0x0
                 _0x2000000:
000038 4e2d
000039 4e41
C:\Users\Sara\Desktop\azmicro\frequency-meter\CodeVision\Release\List\frequency.asm(1127): warning: .cseg .db misalignment - padding zero byte
00003a 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020003:
00003b c080      	.DB  0x80,0xC0
                 _0x20A0060:
C:\Users\Sara\Desktop\azmicro\frequency-meter\CodeVision\Release\List\frequency.asm(1131): warning: .cseg .db misalignment - padding zero byte
00003c 0001      	.DB  0x1
                 _0x20A0000:
00003d 4e2d
00003e 4e41
00003f 4900
000040 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Sara\Desktop\azmicro\frequency-meter\CodeVision\Release\List\frequency.asm(1134): warning: .cseg .db misalignment - padding zero byte
000041 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000042 0002      	.DW  0x02
000043 0264      	.DW  __base_y_G101
000044 0076      	.DW  _0x2020003*2
                 
000045 0001      	.DW  0x01
000046 0268      	.DW  __seed_G105
000047 0078      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000048 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000049 94f8      	CLI
00004a 27ee      	CLR  R30
00004b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004c e0f1      	LDI  R31,1
00004d bffb      	OUT  GICR,R31
00004e bfeb      	OUT  GICR,R30
00004f bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000050 e1f8      	LDI  R31,0x18
000051 bdf1      	OUT  WDTCR,R31
000052 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000053 e08d      	LDI  R24,(14-2)+1
000054 e0a2      	LDI  R26,2
000055 27bb      	CLR  R27
                 __CLEAR_REG:
000056 93ed      	ST   X+,R30
000057 958a      	DEC  R24
000058 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000059 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005a e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005b e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005c 93ed      	ST   X+,R30
00005d 9701      	SBIW R24,1
00005e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005f e8e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000060 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000061 9185      	LPM  R24,Z+
000062 9195      	LPM  R25,Z+
000063 9700      	SBIW R24,0
000064 f061      	BREQ __GLOBAL_INI_END
000065 91a5      	LPM  R26,Z+
000066 91b5      	LPM  R27,Z+
000067 9005      	LPM  R0,Z+
000068 9015      	LPM  R1,Z+
000069 01bf      	MOVW R22,R30
00006a 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006b 9005      	LPM  R0,Z+
00006c 920d      	ST   X+,R0
00006d 9701      	SBIW R24,1
00006e f7e1      	BRNE __GLOBAL_INI_LOOP
00006f 01fb      	MOVW R30,R22
000070 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000071 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000072 bfed      	OUT  SPL,R30
000073 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000074 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000075 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000076 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000077 940c 00b2 	JMP  _main
                 
                 	.ESEG
                 	.ORG 1
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#asm
                    .equ __lcd_port=0x1B ;PORTA
                 ; 0000 0006 #endasm
                 ;#include <lcd.h>
                 ;
                 ;float f;
                 ;void display(){
                 ; 0000 000A void display(){
                 
                 	.CSEG
                 _display:
                 ; .FSTART _display
                 ; 0000 000B char lcd_buf[32];
                 ; 0000 000C if(f>999) sprintf(lcd_buf,"F=%3.2f kHz",f/1000);
000079 97a0      	SBIW R28,32
                 ;	lcd_buf -> Y+0
00007a 940e 065e 	CALL SUBOPT_0x0
                +
00007c e0e0     +LDI R30 , LOW ( 0x4479C000 )
00007d ecf0     +LDI R31 , HIGH ( 0x4479C000 )
00007e e769     +LDI R22 , BYTE3 ( 0x4479C000 )
00007f e474     +LDI R23 , BYTE4 ( 0x4479C000 )
                 	__GETD1N 0x4479C000
000080 940e 0937 	CALL __CMPF12
000082 f009      	BREQ PC+2
000083 f408      	BRCC PC+2
000084 c010      	RJMP _0x3
000085 01fe      	MOVW R30,R28
000086 93fa      	ST   -Y,R31
000087 93ea      	ST   -Y,R30
                +
000088 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000089 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00008a 93fa      	ST   -Y,R31
00008b 93ea      	ST   -Y,R30
00008c 940e 065e 	CALL SUBOPT_0x0
                +
00008e e0e0     +LDI R30 , LOW ( 0x447A0000 )
00008f e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000090 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000091 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000092 940e 08f2 	CALL __DIVF21
000094 c009      	RJMP _0x1B
                 ; 0000 000D else      sprintf(lcd_buf,"F=%3.0f Hz",f);
                 _0x3:
000095 01fe      	MOVW R30,R28
000096 93fa      	ST   -Y,R31
000097 93ea      	ST   -Y,R30
                +
000098 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 12 ) )
000099 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW1FN _0x0,12
00009a 93fa      	ST   -Y,R31
00009b 93ea      	ST   -Y,R30
00009c 940e 0667 	CALL SUBOPT_0x1
                 _0x1B:
00009e 940e 09e0 	CALL __PUTPARD1
0000a0 e084      	LDI  R24,4
0000a1 940e 0440 	CALL _sprintf
0000a3 9628      	ADIW R28,8
                 ; 0000 000E TCNT1=0;
0000a4 940e 0670 	CALL SUBOPT_0x2
                 ; 0000 000F lcd_clear();
0000a6 940e 04c4 	CALL _lcd_clear
                 ; 0000 0010 lcd_gotoxy(2,0);
0000a8 e0e2      	LDI  R30,LOW(2)
0000a9 93ea      	ST   -Y,R30
0000aa e0a0      	LDI  R26,LOW(0)
0000ab 940e 04b4 	CALL _lcd_gotoxy
                 ; 0000 0011 lcd_puts(lcd_buf);
0000ad 01de      	MOVW R26,R28
0000ae 940e 04f1 	CALL _lcd_puts
                 ; 0000 0012 }
0000b0 96a0      	ADIW R28,32
0000b1 9508      	RET
                 ; .FEND
                 ;void main(){
                 ; 0000 0013 void main(){
                 _main:
                 ; .FSTART _main
                 ; 0000 0014 PORTB.1=1;
0000b2 9ac1      	SBI  0x18,1
                 ; 0000 0015 DDRB.1=0;
0000b3 98b9      	CBI  0x17,1
                 ; 0000 0016 TCCR1A=0x00;
0000b4 e0e0      	LDI  R30,LOW(0)
0000b5 bdef      	OUT  0x2F,R30
                 ; 0000 0017 TCCR1B=0x00;
0000b6 bdee      	OUT  0x2E,R30
                 ; 0000 0018 TCNT1H=0x00;
0000b7 bded      	OUT  0x2D,R30
                 ; 0000 0019 TCNT1L=0x00;
0000b8 bdec      	OUT  0x2C,R30
                 ; 0000 001A ASSR=0x00;
0000b9 bde2      	OUT  0x22,R30
                 ; 0000 001B lcd_init(16);
0000ba e1a0      	LDI  R26,LOW(16)
0000bb 940e 0524 	CALL _lcd_init
                 ; 0000 001C lcd_gotoxy(2,0);
0000bd e0e2      	LDI  R30,LOW(2)
0000be 93ea      	ST   -Y,R30
0000bf e0a0      	LDI  R26,LOW(0)
0000c0 940e 04b4 	CALL _lcd_gotoxy
                 ; 0000 001D lcd_putsf("F=~");
                +
0000c2 e6ab     +LDI R26 , LOW ( 2 * _0x0 + ( 23 ) )
0000c3 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 23 ) )
                 	__POINTW2FN _0x0,23
0000c4 940e 0500 	CALL _lcd_putsf
                 ; 0000 001E 
                 ; 0000 001F while(1){
                 _0x9:
                 ; 0000 0020 low_f:
                 _0xC:
                 ; 0000 0021 TCCR1B=0x06;
0000c6 e0e6      	LDI  R30,LOW(6)
0000c7 bdee      	OUT  0x2E,R30
                 ; 0000 0022 delay_ms(1000);
0000c8 eea8      	LDI  R26,LOW(1000)
0000c9 e0b3      	LDI  R27,HIGH(1000)
0000ca 940e 0675 	CALL SUBOPT_0x3
                 ; 0000 0023 TCCR1B=0x00;
                 ; 0000 0024 f=TCNT1;
                 ; 0000 0025 if(f>=10000) {TCNT1=0;goto high_f;}
0000cc 940e 0684 	CALL SUBOPT_0x4
0000ce f018      	BRLO _0xD
0000cf 940e 0670 	CALL SUBOPT_0x2
0000d1 c002      	RJMP _0xE
                 ; 0000 0026 display();
                 _0xD:
0000d2 dfa6      	RCALL _display
                 ; 0000 0027  };
0000d3 cff2      	RJMP _0x9
                 ; 0000 0028 
                 ; 0000 0029 while(1){
                 _0xF:
                 ; 0000 002A high_f:
                 _0xE:
                 ; 0000 002B TCCR1B=0x06;
0000d4 e0e6      	LDI  R30,LOW(6)
0000d5 bdee      	OUT  0x2E,R30
                 ; 0000 002C delay_ms(250);
0000d6 efaa      	LDI  R26,LOW(250)
0000d7 e0b0      	LDI  R27,0
0000d8 940e 0675 	CALL SUBOPT_0x3
                 ; 0000 002D TCCR1B=0x00;
                 ; 0000 002E f=TCNT1;
                 ; 0000 002F f+=f;
0000da 940e 068c 	CALL SUBOPT_0x5
                 ; 0000 0030 f+=f;
0000dc 940e 068c 	CALL SUBOPT_0x5
                 ; 0000 0031 if(f<=10000)   {TCNT1=0;goto low_f;}
0000de 940e 0684 	CALL SUBOPT_0x4
0000e0 f011      	BREQ PC+3
0000e1 f008      	BRCS PC+2
0000e2 c003      	RJMP _0x12
0000e3 940e 0670 	CALL SUBOPT_0x2
0000e5 cfe0      	RJMP _0xC
                 ; 0000 0032 if(f>=150000)  {TCNT1=0;goto highest_f;}
                 _0x12:
0000e6 940e 0699 	CALL SUBOPT_0x6
0000e8 f018      	BRLO _0x13
0000e9 940e 0670 	CALL SUBOPT_0x2
0000eb c006      	RJMP _0x14
                 ; 0000 0033 display();
                 _0x13:
0000ec df8c      	RCALL _display
                 ; 0000 0034 delay_ms(250);
0000ed efaa      	LDI  R26,LOW(250)
0000ee e0b0      	LDI  R27,0
0000ef 940e 07a4 	CALL _delay_ms
                 ; 0000 0035  };
0000f1 cfe2      	RJMP _0xF
                 ; 0000 0036 
                 ; 0000 0037 while(1){
                 _0x15:
                 ; 0000 0038 highest_f:
                 _0x14:
                 ; 0000 0039 TCCR1B=0x06;
0000f2 e0e6      	LDI  R30,LOW(6)
0000f3 bdee      	OUT  0x2E,R30
                 ; 0000 003A delay_ms(62);
0000f4 e3ae      	LDI  R26,LOW(62)
0000f5 e0b0      	LDI  R27,0
0000f6 940e 07a4 	CALL _delay_ms
                 ; 0000 003B delay_us(500);
                +
0000f8 ee88     +LDI R24 , LOW ( 1000 )
0000f9 e093     +LDI R25 , HIGH ( 1000 )
                +__DELAY_USW_LOOP :
0000fa 9701     +SBIW R24 , 1
0000fb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1000
                 ; 0000 003C TCCR1B=0x00;
0000fc e0e0      	LDI  R30,LOW(0)
0000fd bdee      	OUT  0x2E,R30
                 ; 0000 003D f+=f;
0000fe 940e 068c 	CALL SUBOPT_0x5
                 ; 0000 003E f+=f;
000100 940e 068c 	CALL SUBOPT_0x5
                 ; 0000 003F f+=f;
000102 940e 068c 	CALL SUBOPT_0x5
                 ; 0000 0040 f+=f;
000104 940e 068c 	CALL SUBOPT_0x5
                 ; 0000 0041 if(f<=10000)  {TCNT1=0;goto low_f;}
000106 940e 0684 	CALL SUBOPT_0x4
000108 f011      	BREQ PC+3
000109 f008      	BRCS PC+2
00010a c003      	RJMP _0x18
00010b 940e 0670 	CALL SUBOPT_0x2
00010d cfb8      	RJMP _0xC
                 ; 0000 0042 if(f<=150000) {TCNT1=0;goto high_f;}
                 _0x18:
00010e 940e 0699 	CALL SUBOPT_0x6
000110 f011      	BREQ PC+3
000111 f008      	BRCS PC+2
000112 c003      	RJMP _0x19
000113 940e 0670 	CALL SUBOPT_0x2
000115 cfbe      	RJMP _0xE
                 ; 0000 0043 display();
                 _0x19:
000116 df62      	RCALL _display
                 ; 0000 0044 delay_ms(500);
000117 efa4      	LDI  R26,LOW(500)
000118 e0b1      	LDI  R27,HIGH(500)
000119 940e 07a4 	CALL _delay_ms
                 ; 0000 0045  };
00011b cfd6      	RJMP _0x15
                 ; 0000 0046 }
                 _0x1A:
00011c cfff      	RJMP _0x1A
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00011d 93ba      	ST   -Y,R27
00011e 93aa      	ST   -Y,R26
00011f 931a      	ST   -Y,R17
000120 930a      	ST   -Y,R16
000121 81aa      	LDD  R26,Y+2
000122 81bb      	LDD  R27,Y+2+1
000123 9612      	ADIW R26,2
000124 940e 09c2 	CALL __GETW1P
000126 9730      	SBIW R30,0
000127 f129      	BREQ _0x2000010
000128 81aa      	LDD  R26,Y+2
000129 81bb      	LDD  R27,Y+2+1
00012a 9614      	ADIW R26,4
00012b 940e 09c2 	CALL __GETW1P
00012d 018f      	MOVW R16,R30
00012e 9730      	SBIW R30,0
00012f f061      	BREQ _0x2000012
                +
000130 3002     +CPI R16 , LOW ( 2 )
000131 e0e0     +LDI R30 , HIGH ( 2 )
000132 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000133 f080      	BRLO _0x2000013
000134 01f8      	MOVW R30,R16
000135 9731      	SBIW R30,1
000136 018f      	MOVW R16,R30
                +
000137 81aa     +LDD R26 , Y + 2
000138 81bb     +LDD R27 , Y + 2 + 1
000139 9614     +ADIW R26 , 4
00013a 93ed     +ST X + , R30
00013b 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00013c 81aa      	LDD  R26,Y+2
00013d 81bb      	LDD  R27,Y+2+1
00013e 9612      	ADIW R26,2
00013f 940e 06a1 	CALL SUBOPT_0x7
000141 9731      	SBIW R30,1
000142 81ac      	LDD  R26,Y+4
000143 83a0      	STD  Z+0,R26
                 _0x2000013:
000144 81aa      	LDD  R26,Y+2
000145 81bb      	LDD  R27,Y+2+1
000146 940e 09c2 	CALL __GETW1P
000148 23ff      	TST  R31
000149 f012      	BRMI _0x2000014
00014a 940e 06a1 	CALL SUBOPT_0x7
                 _0x2000014:
00014c c006      	RJMP _0x2000015
                 _0x2000010:
00014d 81aa      	LDD  R26,Y+2
00014e 81bb      	LDD  R27,Y+2+1
00014f efef      	LDI  R30,LOW(65535)
000150 efff      	LDI  R31,HIGH(65535)
000151 93ed      	ST   X+,R30
000152 93fc      	ST   X,R31
                 _0x2000015:
000153 8119      	LDD  R17,Y+1
000154 8108      	LDD  R16,Y+0
000155 9625      	ADIW R28,5
000156 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
000157 940e 06a7 	CALL SUBOPT_0x8
000159 e8e0      	LDI  R30,LOW(128)
00015a 83ea      	STD  Y+2,R30
00015b e3ef      	LDI  R30,LOW(63)
00015c 83eb      	STD  Y+3,R30
00015d 940e 09fd 	CALL __SAVELOCR4
00015f 85ee      	LDD  R30,Y+14
000160 85ff      	LDD  R31,Y+14+1
000161 3fef      	CPI  R30,LOW(0xFFFF)
000162 efaf      	LDI  R26,HIGH(0xFFFF)
000163 07fa      	CPC  R31,R26
000164 f449      	BRNE _0x2000019
000165 85e8      	LDD  R30,Y+8
000166 85f9      	LDD  R31,Y+8+1
000167 93fa      	ST   -Y,R31
000168 93ea      	ST   -Y,R30
                +
000169 e7a0     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
00016a e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
00016b 940e 0557 	CALL _strcpyf
00016d c0b4      	RJMP _0x20C0007
                 _0x2000019:
00016e 3fef      	CPI  R30,LOW(0x7FFF)
00016f e7af      	LDI  R26,HIGH(0x7FFF)
000170 07fa      	CPC  R31,R26
000171 f449      	BRNE _0x2000018
000172 85e8      	LDD  R30,Y+8
000173 85f9      	LDD  R31,Y+8+1
000174 93fa      	ST   -Y,R31
000175 93ea      	ST   -Y,R30
                +
000176 e7a1     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
000177 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
000178 940e 0557 	CALL _strcpyf
00017a c0a7      	RJMP _0x20C0007
                 _0x2000018:
00017b 85ab      	LDD  R26,Y+11
00017c 30a7      	CPI  R26,LOW(0x7)
00017d f010      	BRLO _0x200001B
00017e e0e6      	LDI  R30,LOW(6)
00017f 87eb      	STD  Y+11,R30
                 _0x200001B:
000180 851b      	LDD  R17,Y+11
                 _0x200001C:
000181 2fe1      	MOV  R30,R17
000182 5011      	SUBI R17,1
000183 30e0      	CPI  R30,0
000184 f019      	BREQ _0x200001E
000185 940e 06ae 	CALL SUBOPT_0x9
000187 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000188 85ec     +LDD R30 , Y + 12
000189 85fd     +LDD R31 , Y + 12 + 1
00018a 856e     +LDD R22 , Y + 12 + 2
00018b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00018c 940e 09f7 	CALL __CPD10
00018e f421      	BRNE _0x200001F
00018f e030      	LDI  R19,LOW(0)
000190 940e 06ae 	CALL SUBOPT_0x9
000192 c02d      	RJMP _0x2000020
                 _0x200001F:
000193 853b      	LDD  R19,Y+11
000194 940e 06bd 	CALL SUBOPT_0xA
000196 f009      	BREQ PC+2
000197 f408      	BRCC PC+2
000198 c00b      	RJMP _0x2000021
000199 940e 06ae 	CALL SUBOPT_0x9
                 _0x2000022:
00019b 940e 06bd 	CALL SUBOPT_0xA
00019d f028      	BRLO _0x2000024
00019e 940e 06c8 	CALL SUBOPT_0xB
0001a0 940e 06cd 	CALL SUBOPT_0xC
0001a2 cff8      	RJMP _0x2000022
                 _0x2000024:
0001a3 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0001a4 940e 06bd 	CALL SUBOPT_0xA
0001a6 f440      	BRSH _0x2000028
0001a7 940e 06c8 	CALL SUBOPT_0xB
0001a9 940e 06d9 	CALL SUBOPT_0xD
0001ab 940e 06e0 	CALL SUBOPT_0xE
0001ad 5031      	SUBI R19,LOW(1)
0001ae cff5      	RJMP _0x2000026
                 _0x2000028:
0001af 940e 06ae 	CALL SUBOPT_0x9
                 _0x2000025:
                +
0001b1 85ec     +LDD R30 , Y + 12
0001b2 85fd     +LDD R31 , Y + 12 + 1
0001b3 856e     +LDD R22 , Y + 12 + 2
0001b4 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0001b5 940e 06e5 	CALL SUBOPT_0xF
0001b7 940e 06e0 	CALL SUBOPT_0xE
0001b9 940e 06bd 	CALL SUBOPT_0xA
0001bb f020      	BRLO _0x2000029
0001bc 940e 06c8 	CALL SUBOPT_0xB
0001be 940e 06cd 	CALL SUBOPT_0xC
                 _0x2000029:
                 _0x2000020:
0001c0 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0001c1 85eb      	LDD  R30,Y+11
0001c2 17e1      	CP   R30,R17
0001c3 f190      	BRLO _0x200002C
                +
0001c4 81ac     +LDD R26 , Y + 4
0001c5 81bd     +LDD R27 , Y + 4 + 1
0001c6 818e     +LDD R24 , Y + 4 + 2
0001c7 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0001c8 940e 06ec 	CALL SUBOPT_0x10
0001ca 940e 06e5 	CALL SUBOPT_0xF
0001cc 01df      	MOVW R26,R30
0001cd 01cb      	MOVW R24,R22
0001ce 940e 05ae 	CALL _floor
                +
0001d0 83ec     +STD Y + 4 , R30
0001d1 83fd     +STD Y + 4 + 1 , R31
0001d2 836e     +STD Y + 4 + 2 , R22
0001d3 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0001d4 940e 06c8 	CALL SUBOPT_0xB
0001d6 940e 08f2 	CALL __DIVF21
0001d8 940e 07e1 	CALL __CFD1U
0001da 2f0e      	MOV  R16,R30
0001db 940e 06f3 	CALL SUBOPT_0x11
0001dd 940e 06fa 	CALL SUBOPT_0x12
0001df 940e 06ff 	CALL SUBOPT_0x13
                +
0001e1 81ac     +LDD R26 , Y + 4
0001e2 81bd     +LDD R27 , Y + 4 + 1
0001e3 818e     +LDD R24 , Y + 4 + 2
0001e4 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0001e5 940e 08a4 	CALL __MULF12
0001e7 940e 06c8 	CALL SUBOPT_0xB
0001e9 940e 0705 	CALL SUBOPT_0x14
0001eb 940e 06e0 	CALL SUBOPT_0xE
0001ed 2fe1      	MOV  R30,R17
0001ee 5f1f      	SUBI R17,-1
0001ef 30e0      	CPI  R30,0
0001f0 f681      	BRNE _0x200002A
0001f1 940e 06f3 	CALL SUBOPT_0x11
0001f3 e2ee      	LDI  R30,LOW(46)
0001f4 93ec      	ST   X,R30
0001f5 cfcb      	RJMP _0x200002A
                 _0x200002C:
0001f6 940e 070a 	CALL SUBOPT_0x15
0001f8 9731      	SBIW R30,1
0001f9 85aa      	LDD  R26,Y+10
0001fa 83a0      	STD  Z+0,R26
0001fb 3030      	CPI  R19,0
0001fc f42c      	BRGE _0x200002E
0001fd 9531      	NEG  R19
0001fe 85a8      	LDD  R26,Y+8
0001ff 85b9      	LDD  R27,Y+8+1
000200 e2ed      	LDI  R30,LOW(45)
000201 c003      	RJMP _0x2000113
                 _0x200002E:
000202 85a8      	LDD  R26,Y+8
000203 85b9      	LDD  R27,Y+8+1
000204 e2eb      	LDI  R30,LOW(43)
                 _0x2000113:
000205 93ec      	ST   X,R30
000206 940e 070a 	CALL SUBOPT_0x15
000208 940e 070a 	CALL SUBOPT_0x15
00020a 9731      	SBIW R30,1
00020b 01bf      	MOVW R22,R30
00020c 2fa3      	MOV  R26,R19
00020d e0ea      	LDI  R30,LOW(10)
00020e 940e 097c 	CALL __DIVB21
000210 5de0      	SUBI R30,-LOW(48)
000211 01db      	MOVW R26,R22
000212 93ec      	ST   X,R30
000213 940e 070a 	CALL SUBOPT_0x15
000215 9731      	SBIW R30,1
000216 01bf      	MOVW R22,R30
000217 2fa3      	MOV  R26,R19
000218 e0ea      	LDI  R30,LOW(10)
000219 940e 09a6 	CALL __MODB21
00021b 5de0      	SUBI R30,-LOW(48)
00021c 01db      	MOVW R26,R22
00021d 93ec      	ST   X,R30
00021e 85a8      	LDD  R26,Y+8
00021f 85b9      	LDD  R27,Y+8+1
000220 e0e0      	LDI  R30,LOW(0)
000221 93ec      	ST   X,R30
                 _0x20C0007:
000222 940e 0a04 	CALL __LOADLOCR4
000224 9660      	ADIW R28,16
000225 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000226 93ba      	ST   -Y,R27
000227 93aa      	ST   -Y,R26
000228 97ef      	SBIW R28,63
000229 9761      	SBIW R28,17
00022a 940e 09fb 	CALL __SAVELOCR6
00022c e010      	LDI  R17,0
                +
00022d 01fe     +MOVW R30 , R28
00022e 5ae8     +SUBI R30 , LOW ( - 88 )
00022f 4fff     +SBCI R31 , HIGH ( - 88 )
000230 9001     +LD R0 , Z +
000231 81f0     +LD R31 , Z
000232 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000233 87e8      	STD  Y+8,R30
000234 87f9      	STD  Y+8+1,R31
                +
000235 01fe     +MOVW R30 , R28
000236 5aea     +SUBI R30 , LOW ( - 86 )
000237 4fff     +SBCI R31 , HIGH ( - 86 )
000238 9001     +LD R0 , Z +
000239 81f0     +LD R31 , Z
00023a 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00023b 83ee      	STD  Y+6,R30
00023c 83ff      	STD  Y+6+1,R31
00023d 81ae      	LDD  R26,Y+6
00023e 81bf      	LDD  R27,Y+6+1
00023f e0e0      	LDI  R30,LOW(0)
000240 e0f0      	LDI  R31,HIGH(0)
000241 93ed      	ST   X+,R30
000242 93fc      	ST   X,R31
                 _0x2000030:
000243 01de      	MOVW R26,R28
000244 5aa4      	SUBI R26,LOW(-(92))
000245 4fbf      	SBCI R27,HIGH(-(92))
000246 940e 06a1 	CALL SUBOPT_0x7
000248 9731      	SBIW R30,1
000249 91e4      	LPM  R30,Z
00024a 2f2e      	MOV  R18,R30
00024b 30e0      	CPI  R30,0
00024c f409      	BRNE PC+2
00024d c1e9      	RJMP _0x2000032
00024e 2fe1      	MOV  R30,R17
00024f 30e0      	CPI  R30,0
000250 f439      	BRNE _0x2000036
000251 3225      	CPI  R18,37
000252 f411      	BRNE _0x2000037
000253 e011      	LDI  R17,LOW(1)
000254 c002      	RJMP _0x2000038
                 _0x2000037:
000255 940e 0710 	CALL SUBOPT_0x16
                 _0x2000038:
000257 c1de      	RJMP _0x2000035
                 _0x2000036:
000258 30e1      	CPI  R30,LOW(0x1)
000259 f4c1      	BRNE _0x2000039
00025a 3225      	CPI  R18,37
00025b f419      	BRNE _0x200003A
00025c 940e 0710 	CALL SUBOPT_0x16
00025e c1d6      	RJMP _0x2000114
                 _0x200003A:
00025f e012      	LDI  R17,LOW(2)
000260 e0e0      	LDI  R30,LOW(0)
000261 8bed      	STD  Y+21,R30
000262 e000      	LDI  R16,LOW(0)
000263 322d      	CPI  R18,45
000264 f411      	BRNE _0x200003B
000265 e001      	LDI  R16,LOW(1)
000266 c1cf      	RJMP _0x2000035
                 _0x200003B:
000267 322b      	CPI  R18,43
000268 f419      	BRNE _0x200003C
000269 e2eb      	LDI  R30,LOW(43)
00026a 8bed      	STD  Y+21,R30
00026b c1ca      	RJMP _0x2000035
                 _0x200003C:
00026c 3220      	CPI  R18,32
00026d f419      	BRNE _0x200003D
00026e e2e0      	LDI  R30,LOW(32)
00026f 8bed      	STD  Y+21,R30
000270 c1c5      	RJMP _0x2000035
                 _0x200003D:
000271 c002      	RJMP _0x200003E
                 _0x2000039:
000272 30e2      	CPI  R30,LOW(0x2)
000273 f439      	BRNE _0x200003F
                 _0x200003E:
000274 e050      	LDI  R21,LOW(0)
000275 e013      	LDI  R17,LOW(3)
000276 3320      	CPI  R18,48
000277 f411      	BRNE _0x2000040
000278 6800      	ORI  R16,LOW(128)
000279 c1bc      	RJMP _0x2000035
                 _0x2000040:
00027a c002      	RJMP _0x2000041
                 _0x200003F:
00027b 30e3      	CPI  R30,LOW(0x3)
00027c f491      	BRNE _0x2000042
                 _0x2000041:
00027d 3320      	CPI  R18,48
00027e f010      	BRLO _0x2000044
00027f 332a      	CPI  R18,58
000280 f008      	BRLO _0x2000045
                 _0x2000044:
000281 c007      	RJMP _0x2000043
                 _0x2000045:
000282 e0aa      	LDI  R26,LOW(10)
000283 9f5a      	MUL  R21,R26
000284 2d50      	MOV  R21,R0
000285 2fe2      	MOV  R30,R18
000286 53e0      	SUBI R30,LOW(48)
000287 0f5e      	ADD  R21,R30
000288 c1ad      	RJMP _0x2000035
                 _0x2000043:
000289 e040      	LDI  R20,LOW(0)
00028a 322e      	CPI  R18,46
00028b f411      	BRNE _0x2000046
00028c e014      	LDI  R17,LOW(4)
00028d c1a8      	RJMP _0x2000035
                 _0x2000046:
00028e c00f      	RJMP _0x2000047
                 _0x2000042:
00028f 30e4      	CPI  R30,LOW(0x4)
000290 f499      	BRNE _0x2000049
000291 3320      	CPI  R18,48
000292 f010      	BRLO _0x200004B
000293 332a      	CPI  R18,58
000294 f008      	BRLO _0x200004C
                 _0x200004B:
000295 c008      	RJMP _0x200004A
                 _0x200004C:
000296 6200      	ORI  R16,LOW(32)
000297 e0aa      	LDI  R26,LOW(10)
000298 9f4a      	MUL  R20,R26
000299 2d40      	MOV  R20,R0
00029a 2fe2      	MOV  R30,R18
00029b 53e0      	SUBI R30,LOW(48)
00029c 0f4e      	ADD  R20,R30
00029d c198      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
00029e 362c      	CPI  R18,108
00029f f419      	BRNE _0x200004D
0002a0 6002      	ORI  R16,LOW(2)
0002a1 e015      	LDI  R17,LOW(5)
0002a2 c193      	RJMP _0x2000035
                 _0x200004D:
0002a3 c003      	RJMP _0x200004E
                 _0x2000049:
0002a4 30e5      	CPI  R30,LOW(0x5)
0002a5 f009      	BREQ PC+2
0002a6 c18f      	RJMP _0x2000035
                 _0x200004E:
0002a7 2fe2      	MOV  R30,R18
0002a8 36e3      	CPI  R30,LOW(0x63)
0002a9 f459      	BRNE _0x2000053
0002aa 940e 0717 	CALL SUBOPT_0x17
0002ac 940e 071e 	CALL SUBOPT_0x18
0002ae 940e 0717 	CALL SUBOPT_0x17
0002b0 81a4      	LDD  R26,Z+4
0002b1 93aa      	ST   -Y,R26
0002b2 940e 0725 	CALL SUBOPT_0x19
0002b4 c180      	RJMP _0x2000054
                 _0x2000053:
0002b5 34e5      	CPI  R30,LOW(0x45)
0002b6 f011      	BREQ _0x2000057
0002b7 36e5      	CPI  R30,LOW(0x65)
0002b8 f409      	BRNE _0x2000058
                 _0x2000057:
0002b9 c003      	RJMP _0x2000059
                 _0x2000058:
0002ba 36e6      	CPI  R30,LOW(0x66)
0002bb f009      	BREQ PC+2
0002bc c048      	RJMP _0x200005A
                 _0x2000059:
0002bd 01fe      	MOVW R30,R28
0002be 9676      	ADIW R30,22
0002bf 87ee      	STD  Y+14,R30
0002c0 87ff      	STD  Y+14+1,R31
0002c1 940e 072b 	CALL SUBOPT_0x1A
0002c3 940e 09c6 	CALL __GETD1P
0002c5 940e 0732 	CALL SUBOPT_0x1B
0002c7 940e 0737 	CALL SUBOPT_0x1C
0002c9 85ad      	LDD  R26,Y+13
0002ca 23aa      	TST  R26
0002cb f032      	BRMI _0x200005B
0002cc 89ad      	LDD  R26,Y+21
0002cd 32ab      	CPI  R26,LOW(0x2B)
0002ce f059      	BREQ _0x200005D
0002cf 32a0      	CPI  R26,LOW(0x20)
0002d0 f081      	BREQ _0x200005F
0002d1 c017      	RJMP _0x2000060
                 _0x200005B:
0002d2 940e 0739 	CALL SUBOPT_0x1D
0002d4 940e 07ae 	CALL __ANEGF1
0002d6 940e 0732 	CALL SUBOPT_0x1B
0002d8 e2ed      	LDI  R30,LOW(45)
0002d9 8bed      	STD  Y+21,R30
                 _0x200005D:
0002da ff07      	SBRS R16,7
0002db c005      	RJMP _0x2000061
0002dc 89ed      	LDD  R30,Y+21
0002dd 93ea      	ST   -Y,R30
0002de 940e 0725 	CALL SUBOPT_0x19
0002e0 c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
0002e1 85ee      	LDD  R30,Y+14
0002e2 85ff      	LDD  R31,Y+14+1
0002e3 9631      	ADIW R30,1
0002e4 87ee      	STD  Y+14,R30
0002e5 87ff      	STD  Y+14+1,R31
0002e6 9731      	SBIW R30,1
0002e7 89ad      	LDD  R26,Y+21
0002e8 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
0002e9 ff05      	SBRS R16,5
0002ea e046      	LDI  R20,LOW(6)
0002eb 3626      	CPI  R18,102
0002ec f451      	BRNE _0x2000064
0002ed 940e 0739 	CALL SUBOPT_0x1D
0002ef 940e 09e0 	CALL __PUTPARD1
0002f1 934a      	ST   -Y,R20
0002f2 89ab      	LDD  R26,Y+19
0002f3 89bc      	LDD  R27,Y+19+1
0002f4 940e 05c5 	CALL _ftoa
0002f6 c009      	RJMP _0x2000065
                 _0x2000064:
0002f7 940e 0739 	CALL SUBOPT_0x1D
0002f9 940e 09e0 	CALL __PUTPARD1
0002fb 934a      	ST   -Y,R20
0002fc 932a      	ST   -Y,R18
0002fd 89ac      	LDD  R26,Y+20
0002fe 89bd      	LDD  R27,Y+20+1
0002ff de57      	RCALL __ftoe_G100
                 _0x2000065:
000300 01fe      	MOVW R30,R28
000301 9676      	ADIW R30,22
000302 940e 073e 	CALL SUBOPT_0x1E
000304 c01e      	RJMP _0x2000066
                 _0x200005A:
000305 37e3      	CPI  R30,LOW(0x73)
000306 f439      	BRNE _0x2000068
000307 940e 0737 	CALL SUBOPT_0x1C
000309 940e 0746 	CALL SUBOPT_0x1F
00030b 940e 073e 	CALL SUBOPT_0x1E
00030d c00e      	RJMP _0x2000069
                 _0x2000068:
00030e 37e0      	CPI  R30,LOW(0x70)
00030f f4c1      	BRNE _0x200006B
000310 940e 0737 	CALL SUBOPT_0x1C
000312 940e 0746 	CALL SUBOPT_0x1F
000314 87ee      	STD  Y+14,R30
000315 87ff      	STD  Y+14+1,R31
000316 85ae      	LDD  R26,Y+14
000317 85bf      	LDD  R27,Y+14+1
000318 940e 0570 	CALL _strlenf
00031a 2f1e      	MOV  R17,R30
00031b 6008      	ORI  R16,LOW(8)
                 _0x2000069:
00031c 770f      	ANDI R16,LOW(127)
00031d 3040      	CPI  R20,0
00031e f011      	BREQ _0x200006D
00031f 1741      	CP   R20,R17
000320 f008      	BRLO _0x200006E
                 _0x200006D:
000321 c001      	RJMP _0x200006C
                 _0x200006E:
000322 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
000323 e040      	LDI  R20,LOW(0)
000324 e0e0      	LDI  R30,LOW(0)
000325 8bec      	STD  Y+20,R30
000326 e030      	LDI  R19,LOW(0)
000327 c06d      	RJMP _0x200006F
                 _0x200006B:
000328 36e4      	CPI  R30,LOW(0x64)
000329 f011      	BREQ _0x2000072
00032a 36e9      	CPI  R30,LOW(0x69)
00032b f411      	BRNE _0x2000073
                 _0x2000072:
00032c 6004      	ORI  R16,LOW(4)
00032d c002      	RJMP _0x2000074
                 _0x2000073:
00032e 37e5      	CPI  R30,LOW(0x75)
00032f f4a1      	BRNE _0x2000075
                 _0x2000074:
000330 e0ea      	LDI  R30,LOW(10)
000331 8bec      	STD  Y+20,R30
000332 ff01      	SBRS R16,1
000333 c008      	RJMP _0x2000076
                +
000334 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000335 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000336 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000337 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000338 940e 074b 	CALL SUBOPT_0x20
00033a e01a      	LDI  R17,LOW(10)
00033b c022      	RJMP _0x2000077
                 _0x2000076:
                +
00033c e1e0     +LDI R30 , LOW ( 0x2710 )
00033d e2f7     +LDI R31 , HIGH ( 0x2710 )
00033e e060     +LDI R22 , BYTE3 ( 0x2710 )
00033f e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000340 940e 074b 	CALL SUBOPT_0x20
000342 e015      	LDI  R17,LOW(5)
000343 c01a      	RJMP _0x2000077
                 _0x2000075:
000344 35e8      	CPI  R30,LOW(0x58)
000345 f411      	BRNE _0x2000079
000346 6008      	ORI  R16,LOW(8)
000347 c003      	RJMP _0x200007A
                 _0x2000079:
000348 37e8      	CPI  R30,LOW(0x78)
000349 f009      	BREQ PC+2
00034a c0ea      	RJMP _0x20000B8
                 _0x200007A:
00034b e1e0      	LDI  R30,LOW(16)
00034c 8bec      	STD  Y+20,R30
00034d ff01      	SBRS R16,1
00034e c008      	RJMP _0x200007C
                +
00034f e0e0     +LDI R30 , LOW ( 0x10000000 )
000350 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000351 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000352 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000353 940e 074b 	CALL SUBOPT_0x20
000355 e018      	LDI  R17,LOW(8)
000356 c007      	RJMP _0x2000077
                 _0x200007C:
                +
000357 e0e0     +LDI R30 , LOW ( 0x1000 )
000358 e1f0     +LDI R31 , HIGH ( 0x1000 )
000359 e060     +LDI R22 , BYTE3 ( 0x1000 )
00035a e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00035b 940e 074b 	CALL SUBOPT_0x20
00035d e014      	LDI  R17,LOW(4)
                 _0x2000077:
00035e 3040      	CPI  R20,0
00035f f011      	BREQ _0x200007D
000360 770f      	ANDI R16,LOW(127)
000361 c001      	RJMP _0x200007E
                 _0x200007D:
000362 e041      	LDI  R20,LOW(1)
                 _0x200007E:
000363 ff01      	SBRS R16,1
000364 c008      	RJMP _0x200007F
000365 940e 0737 	CALL SUBOPT_0x1C
000367 940e 072b 	CALL SUBOPT_0x1A
000369 9614      	ADIW R26,4
00036a 940e 09c6 	CALL __GETD1P
00036c c00f      	RJMP _0x2000115
                 _0x200007F:
00036d ff02      	SBRS R16,2
00036e c007      	RJMP _0x2000081
00036f 940e 0737 	CALL SUBOPT_0x1C
000371 940e 0746 	CALL SUBOPT_0x1F
000373 940e 0969 	CALL __CWD1
000375 c006      	RJMP _0x2000115
                 _0x2000081:
000376 940e 0737 	CALL SUBOPT_0x1C
000378 940e 0746 	CALL SUBOPT_0x1F
00037a 2766      	CLR  R22
00037b 2777      	CLR  R23
                 _0x2000115:
                +
00037c 87ea     +STD Y + 10 , R30
00037d 87fb     +STD Y + 10 + 1 , R31
00037e 876c     +STD Y + 10 + 2 , R22
00037f 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000380 ff02      	SBRS R16,2
000381 c012      	RJMP _0x2000083
000382 85ad      	LDD  R26,Y+13
000383 23aa      	TST  R26
000384 f442      	BRPL _0x2000084
000385 940e 0739 	CALL SUBOPT_0x1D
000387 940e 095b 	CALL __ANEGD1
000389 940e 0732 	CALL SUBOPT_0x1B
00038b e2ed      	LDI  R30,LOW(45)
00038c 8bed      	STD  Y+21,R30
                 _0x2000084:
00038d 89ed      	LDD  R30,Y+21
00038e 30e0      	CPI  R30,0
00038f f019      	BREQ _0x2000085
000390 5f1f      	SUBI R17,-LOW(1)
000391 5f4f      	SUBI R20,-LOW(1)
000392 c001      	RJMP _0x2000086
                 _0x2000085:
000393 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
000394 2f34      	MOV  R19,R20
                 _0x200006F:
000395 fd00      	SBRC R16,0
000396 c014      	RJMP _0x2000087
                 _0x2000088:
000397 1715      	CP   R17,R21
000398 f410      	BRSH _0x200008B
000399 1735      	CP   R19,R21
00039a f008      	BRLO _0x200008C
                 _0x200008B:
00039b c00f      	RJMP _0x200008A
                 _0x200008C:
00039c ff07      	SBRS R16,7
00039d c008      	RJMP _0x200008D
00039e ff02      	SBRS R16,2
00039f c004      	RJMP _0x200008E
0003a0 7f0b      	ANDI R16,LOW(251)
0003a1 892d      	LDD  R18,Y+21
0003a2 5011      	SUBI R17,LOW(1)
0003a3 c001      	RJMP _0x200008F
                 _0x200008E:
0003a4 e320      	LDI  R18,LOW(48)
                 _0x200008F:
0003a5 c001      	RJMP _0x2000090
                 _0x200008D:
0003a6 e220      	LDI  R18,LOW(32)
                 _0x2000090:
0003a7 940e 0710 	CALL SUBOPT_0x16
0003a9 5051      	SUBI R21,LOW(1)
0003aa cfec      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
0003ab 1714      	CP   R17,R20
0003ac f490      	BRSH _0x2000093
0003ad 6100      	ORI  R16,LOW(16)
0003ae ff02      	SBRS R16,2
0003af c006      	RJMP _0x2000094
0003b0 940e 0750 	CALL SUBOPT_0x21
0003b2 f009      	BREQ _0x2000095
0003b3 5051      	SUBI R21,LOW(1)
                 _0x2000095:
0003b4 5011      	SUBI R17,LOW(1)
0003b5 5041      	SUBI R20,LOW(1)
                 _0x2000094:
0003b6 e3e0      	LDI  R30,LOW(48)
0003b7 93ea      	ST   -Y,R30
0003b8 940e 0725 	CALL SUBOPT_0x19
0003ba 3050      	CPI  R21,0
0003bb f009      	BREQ _0x2000096
0003bc 5051      	SUBI R21,LOW(1)
                 _0x2000096:
0003bd 5041      	SUBI R20,LOW(1)
0003be cfec      	RJMP _0x2000091
                 _0x2000093:
0003bf 2f31      	MOV  R19,R17
0003c0 89ec      	LDD  R30,Y+20
0003c1 30e0      	CPI  R30,0
0003c2 f4b9      	BRNE _0x2000097
                 _0x2000098:
0003c3 3030      	CPI  R19,0
0003c4 f0a1      	BREQ _0x200009A
0003c5 ff03      	SBRS R16,3
0003c6 c006      	RJMP _0x200009B
0003c7 85ee      	LDD  R30,Y+14
0003c8 85ff      	LDD  R31,Y+14+1
0003c9 9125      	LPM  R18,Z+
0003ca 87ee      	STD  Y+14,R30
0003cb 87ff      	STD  Y+14+1,R31
0003cc c005      	RJMP _0x200009C
                 _0x200009B:
0003cd 85ae      	LDD  R26,Y+14
0003ce 85bf      	LDD  R27,Y+14+1
0003cf 912d      	LD   R18,X+
0003d0 87ae      	STD  Y+14,R26
0003d1 87bf      	STD  Y+14+1,R27
                 _0x200009C:
0003d2 940e 0710 	CALL SUBOPT_0x16
0003d4 3050      	CPI  R21,0
0003d5 f009      	BREQ _0x200009D
0003d6 5051      	SUBI R21,LOW(1)
                 _0x200009D:
0003d7 5031      	SUBI R19,LOW(1)
0003d8 cfea      	RJMP _0x2000098
                 _0x200009A:
0003d9 c051      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
0003da 940e 0762 	CALL SUBOPT_0x22
0003dc 940e 0981 	CALL __DIVD21U
0003de 2f2e      	MOV  R18,R30
0003df 302a      	CPI  R18,10
0003e0 f030      	BRLO _0x20000A2
0003e1 ff03      	SBRS R16,3
0003e2 c002      	RJMP _0x20000A3
0003e3 5c29      	SUBI R18,-LOW(55)
0003e4 c001      	RJMP _0x20000A4
                 _0x20000A3:
0003e5 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
0003e6 c001      	RJMP _0x20000A5
                 _0x20000A2:
0003e7 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
0003e8 fd04      	SBRC R16,4
0003e9 c021      	RJMP _0x20000A7
0003ea 3321      	CPI  R18,49
0003eb f460      	BRSH _0x20000A9
                +
0003ec 89a8     +LDD R26 , Y + 16
0003ed 89b9     +LDD R27 , Y + 16 + 1
0003ee 898a     +LDD R24 , Y + 16 + 2
0003ef 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0003f0 30a1     +CPI R26 , LOW ( 0x1 )
0003f1 e0e0     +LDI R30 , HIGH ( 0x1 )
0003f2 07be     +CPC R27 , R30
0003f3 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0003f4 078e     +CPC R24 , R30
0003f5 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0003f6 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0003f7 f409      	BRNE _0x20000A8
                 _0x20000A9:
0003f8 c00b      	RJMP _0x20000AB
                 _0x20000A8:
0003f9 1743      	CP   R20,R19
0003fa f440      	BRSH _0x2000116
0003fb 1753      	CP   R21,R19
0003fc f010      	BRLO _0x20000AE
0003fd ff00      	SBRS R16,0
0003fe c001      	RJMP _0x20000AF
                 _0x20000AE:
0003ff c010      	RJMP _0x20000AD
                 _0x20000AF:
000400 e220      	LDI  R18,LOW(32)
000401 ff07      	SBRS R16,7
000402 c008      	RJMP _0x20000B0
                 _0x2000116:
000403 e320      	LDI  R18,LOW(48)
                 _0x20000AB:
000404 6100      	ORI  R16,LOW(16)
000405 ff02      	SBRS R16,2
000406 c004      	RJMP _0x20000B1
000407 940e 0750 	CALL SUBOPT_0x21
000409 f009      	BREQ _0x20000B2
00040a 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
00040b 940e 0710 	CALL SUBOPT_0x16
00040d 3050      	CPI  R21,0
00040e f009      	BREQ _0x20000B3
00040f 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
000410 5031      	SUBI R19,LOW(1)
000411 940e 0762 	CALL SUBOPT_0x22
000413 940e 09b2 	CALL __MODD21U
000415 940e 0732 	CALL SUBOPT_0x1B
000417 89ec      	LDD  R30,Y+20
                +
000418 89a8     +LDD R26 , Y + 16
000419 89b9     +LDD R27 , Y + 16 + 1
00041a 898a     +LDD R24 , Y + 16 + 2
00041b 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00041c 27ff      	CLR  R31
00041d 2766      	CLR  R22
00041e 2777      	CLR  R23
00041f 940e 0981 	CALL __DIVD21U
000421 940e 074b 	CALL SUBOPT_0x20
                +
000423 89e8     +LDD R30 , Y + 16
000424 89f9     +LDD R31 , Y + 16 + 1
000425 896a     +LDD R22 , Y + 16 + 2
000426 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000427 940e 09f7 	CALL __CPD10
000429 f009      	BREQ _0x20000A1
00042a cfaf      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
00042b ff00      	SBRS R16,0
00042c c008      	RJMP _0x20000B4
                 _0x20000B5:
00042d 3050      	CPI  R21,0
00042e f031      	BREQ _0x20000B7
00042f 5051      	SUBI R21,LOW(1)
000430 e2e0      	LDI  R30,LOW(32)
000431 93ea      	ST   -Y,R30
000432 940e 0725 	CALL SUBOPT_0x19
000434 cff8      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000114:
000435 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000436 ce0c      	RJMP _0x2000030
                 _0x2000032:
000437 81ae      	LDD  R26,Y+6
000438 81bf      	LDD  R27,Y+6+1
000439 940e 09c2 	CALL __GETW1P
00043b 940e 0a02 	CALL __LOADLOCR6
00043d 96ef      	ADIW R28,63
00043e 966f      	ADIW R28,31
00043f 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000440 92ff      	PUSH R15
000441 2ef8      	MOV  R15,R24
000442 9726      	SBIW R28,6
000443 940e 09fd 	CALL __SAVELOCR4
000445 940e 076b 	CALL SUBOPT_0x23
000447 9730      	SBIW R30,0
000448 f419      	BRNE _0x20000B9
000449 efef      	LDI  R30,LOW(65535)
00044a efff      	LDI  R31,HIGH(65535)
00044b c023      	RJMP _0x20C0006
                 _0x20000B9:
00044c 01de      	MOVW R26,R28
00044d 9616      	ADIW R26,6
00044e 940e 0957 	CALL __ADDW2R15
000450 018d      	MOVW R16,R26
000451 940e 076b 	CALL SUBOPT_0x23
000453 83ee      	STD  Y+6,R30
000454 83ff      	STD  Y+6+1,R31
000455 e0e0      	LDI  R30,LOW(0)
000456 87e8      	STD  Y+8,R30
000457 87e9      	STD  Y+8+1,R30
000458 01de      	MOVW R26,R28
000459 961a      	ADIW R26,10
00045a 940e 0957 	CALL __ADDW2R15
00045c 940e 09c2 	CALL __GETW1P
00045e 93fa      	ST   -Y,R31
00045f 93ea      	ST   -Y,R30
000460 931a      	ST   -Y,R17
000461 930a      	ST   -Y,R16
000462 e1ed      	LDI  R30,LOW(_put_buff_G100)
000463 e0f1      	LDI  R31,HIGH(_put_buff_G100)
000464 93fa      	ST   -Y,R31
000465 93ea      	ST   -Y,R30
000466 01de      	MOVW R26,R28
000467 961a      	ADIW R26,10
000468 ddbd      	RCALL __print_G100
000469 019f      	MOVW R18,R30
00046a 81ae      	LDD  R26,Y+6
00046b 81bf      	LDD  R27,Y+6+1
00046c e0e0      	LDI  R30,LOW(0)
00046d 93ec      	ST   X,R30
00046e 01f9      	MOVW R30,R18
                 _0x20C0006:
00046f 940e 0a04 	CALL __LOADLOCR4
000471 962a      	ADIW R28,10
000472 90ff      	POP  R15
000473 9508      	RET
                 ; .FEND
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G101:
                 ; .FSTART __lcd_delay_G101
000474 e0ff          ldi   r31,15
                 __lcd_delay0:
000475 95fa          dec   r31
000476 f7f1          brne  __lcd_delay0
000477 9508      	RET
                 ; .FEND
                 __lcd_ready:
                 ; .FSTART __lcd_ready
000478 b3aa          in    r26,__lcd_direction
000479 70af          andi  r26,0xf                 ;set as input
00047a bbaa          out   __lcd_direction,r26
00047b 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
00047c 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
00047d dff6      	RCALL __lcd_delay_G101
00047e 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
00047f dff4      	RCALL __lcd_delay_G101
000480 b3a9          in    r26,__lcd_pin
000481 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000482 dff1      	RCALL __lcd_delay_G101
000483 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000484 dfef      	RCALL __lcd_delay_G101
000485 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000486 fda7          sbrc  r26,__lcd_busy_flag
000487 cff5          rjmp  __lcd_busy
000488 9508      	RET
                 ; .FEND
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000489 7fa0          andi  r26,0xf0
00048a 2bab          or    r26,r27
00048b bbab          out   __lcd_port,r26          ;write
00048c 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
00048d 940e 0474 	CALL __lcd_delay_G101
00048f 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000490 940e 0474 	CALL __lcd_delay_G101
000492 9508      	RET
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000493 93aa      	ST   -Y,R26
000494 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000495 b3aa          in    r26,__lcd_direction
000496 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
000497 bbaa          out   __lcd_direction,r26
000498 b3bb          in    r27,__lcd_port
000499 70bf          andi  r27,0xf
00049a 81a8          ld    r26,y
00049b dfed      	RCALL __lcd_write_nibble_G101
00049c 81a8          ld    r26,y
00049d 95a2          swap  r26
00049e dfea      	RCALL __lcd_write_nibble_G101
00049f 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
0004a0 940c 0555 	JMP  _0x20C0004
                 ; .FEND
                 __lcd_read_nibble_G101:
                 ; .FSTART __lcd_read_nibble_G101
0004a2 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
0004a3 940e 0474 	CALL __lcd_delay_G101
0004a5 b3e9          in    r30,__lcd_pin           ;read
0004a6 98da          cbi   __lcd_port,__lcd_enable ;EN=0
0004a7 940e 0474 	CALL __lcd_delay_G101
0004a9 7fe0          andi  r30,0xf0
0004aa 9508      	RET
                 ; .FEND
                 _lcd_read_byte0_G101:
                 ; .FSTART _lcd_read_byte0_G101
0004ab 940e 0474 	CALL __lcd_delay_G101
0004ad dff4      	RCALL __lcd_read_nibble_G101
0004ae 2fae          mov   r26,r30
0004af dff2      	RCALL __lcd_read_nibble_G101
0004b0 98d9          cbi   __lcd_port,__lcd_rd     ;RD=0
0004b1 95e2          swap  r30
0004b2 2bea          or    r30,r26
0004b3 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0004b4 93aa      	ST   -Y,R26
0004b5 940e 0478 	CALL __lcd_ready
0004b7 81e8      	LD   R30,Y
0004b8 e0f0      	LDI  R31,0
0004b9 59ec      	SUBI R30,LOW(-__base_y_G101)
0004ba 4ffd      	SBCI R31,HIGH(-__base_y_G101)
0004bb 81e0      	LD   R30,Z
0004bc 81a9      	LDD  R26,Y+1
0004bd 0fae      	ADD  R26,R30
0004be 940e 0493 	CALL __lcd_write_data
0004c0 8059      	LDD  R5,Y+1
0004c1 8048      	LDD  R4,Y+0
0004c2 9622      	ADIW R28,2
0004c3 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0004c4 940e 0478 	CALL __lcd_ready
0004c6 e0a2      	LDI  R26,LOW(2)
0004c7 940e 0493 	CALL __lcd_write_data
0004c9 940e 0478 	CALL __lcd_ready
0004cb e0ac      	LDI  R26,LOW(12)
0004cc 940e 0493 	CALL __lcd_write_data
0004ce 940e 0478 	CALL __lcd_ready
0004d0 e0a1      	LDI  R26,LOW(1)
0004d1 940e 0493 	CALL __lcd_write_data
0004d3 e0e0      	LDI  R30,LOW(0)
0004d4 2e4e      	MOV  R4,R30
0004d5 2e5e      	MOV  R5,R30
0004d6 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0004d7 93aa      	ST   -Y,R26
0004d8 93ef          push r30
0004d9 93ff          push r31
0004da 81a8          ld   r26,y
0004db 9468          set
0004dc 30aa          cpi  r26,10
0004dd f019          breq __lcd_putchar1
0004de 94e8          clt
0004df 1457      	CP   R5,R7
0004e0 f030      	BRLO _0x2020004
                 	__lcd_putchar1:
0004e1 9443      	INC  R4
0004e2 e0e0      	LDI  R30,LOW(0)
0004e3 93ea      	ST   -Y,R30
0004e4 2da4      	MOV  R26,R4
0004e5 dfce      	RCALL _lcd_gotoxy
0004e6 f036      	brts __lcd_putchar0
                 _0x2020004:
0004e7 9453      	INC  R5
0004e8 df8f          rcall __lcd_ready
0004e9 9ad8          sbi  __lcd_port,__lcd_rs ;RS=1
0004ea 81a8      	LD   R26,Y
0004eb 940e 0493 	CALL __lcd_write_data
                 __lcd_putchar0:
0004ed 91ff          pop  r31
0004ee 91ef          pop  r30
0004ef 940c 0555 	JMP  _0x20C0004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0004f1 93ba      	ST   -Y,R27
0004f2 93aa      	ST   -Y,R26
0004f3 931a      	ST   -Y,R17
                 _0x2020005:
0004f4 81a9      	LDD  R26,Y+1
0004f5 81ba      	LDD  R27,Y+1+1
0004f6 91ed      	LD   R30,X+
0004f7 83a9      	STD  Y+1,R26
0004f8 83ba      	STD  Y+1+1,R27
0004f9 2f1e      	MOV  R17,R30
0004fa 30e0      	CPI  R30,0
0004fb f019      	BREQ _0x2020007
0004fc 2fa1      	MOV  R26,R17
0004fd dfd9      	RCALL _lcd_putchar
0004fe cff5      	RJMP _0x2020005
                 _0x2020007:
0004ff c010      	RJMP _0x20C0005
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000500 93ba      	ST   -Y,R27
000501 93aa      	ST   -Y,R26
000502 931a      	ST   -Y,R17
                 _0x2020008:
000503 81e9      	LDD  R30,Y+1
000504 81fa      	LDD  R31,Y+1+1
000505 9631      	ADIW R30,1
000506 83e9      	STD  Y+1,R30
000507 83fa      	STD  Y+1+1,R31
000508 9731      	SBIW R30,1
000509 91e4      	LPM  R30,Z
00050a 2f1e      	MOV  R17,R30
00050b 30e0      	CPI  R30,0
00050c f019      	BREQ _0x202000A
00050d 2fa1      	MOV  R26,R17
00050e dfc8      	RCALL _lcd_putchar
00050f cff3      	RJMP _0x2020008
                 _0x202000A:
                 _0x20C0005:
000510 8118      	LDD  R17,Y+0
000511 9623      	ADIW R28,3
000512 9508      	RET
                 ; .FEND
                 __long_delay_G101:
                 ; .FSTART __long_delay_G101
000513 27aa          clr   r26
000514 27bb          clr   r27
                 __long_delay0:
000515 9711          sbiw  r26,1         ;2 cycles
000516 f7f1          brne  __long_delay0 ;2 cycles
000517 9508      	RET
                 ; .FEND
                 __lcd_init_write_G101:
                 ; .FSTART __lcd_init_write_G101
000518 93aa      	ST   -Y,R26
000519 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00051a b3aa          in    r26,__lcd_direction
00051b 6fa7          ori   r26,0xf7                ;set as output
00051c bbaa          out   __lcd_direction,r26
00051d b3bb          in    r27,__lcd_port
00051e 70bf          andi  r27,0xf
00051f 81a8          ld    r26,y
000520 940e 0489 	CALL __lcd_write_nibble_G101
000522 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000523 c031      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000524 93aa      	ST   -Y,R26
000525 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000526 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
000527 8078      	LDD  R7,Y+0
000528 81e8      	LD   R30,Y
000529 58e0      	SUBI R30,-LOW(128)
                +
00052a 93e0 0266+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
00052c 81e8      	LD   R30,Y
00052d 54e0      	SUBI R30,-LOW(192)
                +
00052e 93e0 0267+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000530 940e 0772 	CALL SUBOPT_0x24
000532 940e 0772 	CALL SUBOPT_0x24
000534 940e 0772 	CALL SUBOPT_0x24
000536 dfdc      	RCALL __long_delay_G101
000537 e2a0      	LDI  R26,LOW(32)
000538 dfdf      	RCALL __lcd_init_write_G101
000539 dfd9      	RCALL __long_delay_G101
00053a e2a8      	LDI  R26,LOW(40)
00053b 940e 0777 	CALL SUBOPT_0x25
00053d e0a4      	LDI  R26,LOW(4)
00053e 940e 0777 	CALL SUBOPT_0x25
000540 e8a5      	LDI  R26,LOW(133)
000541 940e 0777 	CALL SUBOPT_0x25
000543 b3aa          in    r26,__lcd_direction
000544 70af          andi  r26,0xf                 ;set as input
000545 bbaa          out   __lcd_direction,r26
000546 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000547 940e 04ab 	CALL _lcd_read_byte0_G101
000549 30e5      	CPI  R30,LOW(0x5)
00054a f011      	BREQ _0x202000B
00054b e0e0      	LDI  R30,LOW(0)
00054c c008      	RJMP _0x20C0004
                 _0x202000B:
00054d 940e 0478 	CALL __lcd_ready
00054f e0a6      	LDI  R26,LOW(6)
000550 940e 0493 	CALL __lcd_write_data
000552 940e 04c4 	CALL _lcd_clear
000554 e0e1      	LDI  R30,LOW(1)
                 _0x20C0004:
000555 9621      	ADIW R28,1
000556 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000557 93ba      	ST   -Y,R27
000558 93aa      	ST   -Y,R26
000559 91e9          ld   r30,y+
00055a 91f9          ld   r31,y+
00055b 91a9          ld   r26,y+
00055c 91b9          ld   r27,y+
00055d 01cd          movw r24,r26
                 strcpyf0:
00055e 9005      	lpm  r0,z+
00055f 920d          st   x+,r0
000560 2000          tst  r0
000561 f7e1          brne strcpyf0
000562 01fc          movw r30,r24
000563 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000564 93ba      	ST   -Y,R27
000565 93aa      	ST   -Y,R26
000566 91a9          ld   r26,y+
000567 91b9          ld   r27,y+
000568 27ee          clr  r30
000569 27ff          clr  r31
                 strlen0:
00056a 916d          ld   r22,x+
00056b 2366          tst  r22
00056c f011          breq strlen1
00056d 9631          adiw r30,1
00056e cffb          rjmp strlen0
                 strlen1:
00056f 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000570 93ba      	ST   -Y,R27
000571 93aa      	ST   -Y,R26
000572 27aa          clr  r26
000573 27bb          clr  r27
000574 91e9          ld   r30,y+
000575 91f9          ld   r31,y+
                 strlenf0:
000576 9005      	lpm  r0,z+
000577 2000          tst  r0
000578 f011          breq strlenf1
000579 9611          adiw r26,1
00057a cffb          rjmp strlenf0
                 strlenf1:
00057b 01fd          movw r30,r26
00057c 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00057d 940e 09e5 	CALL __PUTPARD2
00057f 817b         ldd  r23,y+3
000580 816a         ldd  r22,y+2
000581 81f9         ldd  r31,y+1
000582 81e8         ld   r30,y
000583 fb77         bst  r23,7
000584 0f77         lsl  r23
000585 fd67         sbrc r22,7
000586 6071         sbr  r23,1
000587 2f97         mov  r25,r23
000588 579e         subi r25,0x7e
000589 f081         breq __ftrunc0
00058a f078         brcs __ftrunc0
00058b 3198         cpi  r25,24
00058c f490         brsh __ftrunc1
00058d 27aa         clr  r26
00058e 27bb         clr  r27
00058f 2788         clr  r24
                 __ftrunc2:
000590 9408         sec
000591 9587         ror  r24
000592 95b7         ror  r27
000593 95a7         ror  r26
000594 959a         dec  r25
000595 f7d1         brne __ftrunc2
000596 23ea         and  r30,r26
000597 23fb         and  r31,r27
000598 2368         and  r22,r24
000599 c005         rjmp __ftrunc1
                 __ftrunc0:
00059a 94e8         clt
00059b 2777         clr  r23
00059c 27ee         clr  r30
00059d 27ff         clr  r31
00059e 2766         clr  r22
                 __ftrunc1:
00059f 776f         cbr  r22,0x80
0005a0 9576         lsr  r23
0005a1 f408         brcc __ftrunc3
0005a2 6860         sbr  r22,0x80
                 __ftrunc3:
0005a3 f977         bld  r23,7
0005a4 91a9         ld   r26,y+
0005a5 91b9         ld   r27,y+
0005a6 9189         ld   r24,y+
0005a7 9199         ld   r25,y+
0005a8 17ea         cp   r30,r26
0005a9 07fb         cpc  r31,r27
0005aa 0768         cpc  r22,r24
0005ab 0779         cpc  r23,r25
0005ac fb97         bst  r25,7
0005ad 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0005ae 940e 09e5 	CALL __PUTPARD2
0005b0 940e 09d6 	CALL __GETD2S0
0005b2 940e 057d 	CALL _ftrunc
0005b4 940e 09db 	CALL __PUTD1S0
0005b6 f419          brne __floor1
                 __floor0:
0005b7 940e 09d1 	CALL __GETD1S0
0005b9 c009      	RJMP _0x20C0003
                 __floor1:
0005ba f7e6          brtc __floor0
0005bb 940e 09d1 	CALL __GETD1S0
                +
0005bd e0a0     +LDI R26 , LOW ( 0x3F800000 )
0005be e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0005bf e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0005c0 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0005c1 940e 084d 	CALL __SUBF12
                 _0x20C0003:
0005c3 9624      	ADIW R28,4
0005c4 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0005c5 d0e1      	RCALL SUBOPT_0x8
0005c6 e0e0      	LDI  R30,LOW(0)
0005c7 83ea      	STD  Y+2,R30
0005c8 e3ef      	LDI  R30,LOW(63)
0005c9 83eb      	STD  Y+3,R30
0005ca 931a      	ST   -Y,R17
0005cb 930a      	ST   -Y,R16
0005cc 85eb      	LDD  R30,Y+11
0005cd 85fc      	LDD  R31,Y+11+1
0005ce 3fef      	CPI  R30,LOW(0xFFFF)
0005cf efaf      	LDI  R26,HIGH(0xFFFF)
0005d0 07fa      	CPC  R31,R26
0005d1 f431      	BRNE _0x20A000D
0005d2 d1a8      	RCALL SUBOPT_0x26
                +
0005d3 e7aa     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0005d4 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
0005d5 940e 0557 	CALL _strcpyf
0005d7 c082      	RJMP _0x20C0002
                 _0x20A000D:
0005d8 3fef      	CPI  R30,LOW(0x7FFF)
0005d9 e7af      	LDI  R26,HIGH(0x7FFF)
0005da 07fa      	CPC  R31,R26
0005db f431      	BRNE _0x20A000C
0005dc d19e      	RCALL SUBOPT_0x26
                +
0005dd e7ab     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0005de e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
0005df 940e 0557 	CALL _strcpyf
0005e1 c078      	RJMP _0x20C0002
                 _0x20A000C:
0005e2 85ac      	LDD  R26,Y+12
0005e3 23aa      	TST  R26
0005e4 f452      	BRPL _0x20A000F
                +
0005e5 85e9     +LDD R30 , Y + 9
0005e6 85fa     +LDD R31 , Y + 9 + 1
0005e7 856b     +LDD R22 , Y + 9 + 2
0005e8 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005e9 940e 07ae 	CALL __ANEGF1
0005eb d194      	RCALL SUBOPT_0x27
0005ec d198      	RCALL SUBOPT_0x28
0005ed e2ed      	LDI  R30,LOW(45)
0005ee 93ec      	ST   X,R30
                 _0x20A000F:
0005ef 85a8      	LDD  R26,Y+8
0005f0 30a7      	CPI  R26,LOW(0x7)
0005f1 f010      	BRLO _0x20A0010
0005f2 e0e6      	LDI  R30,LOW(6)
0005f3 87e8      	STD  Y+8,R30
                 _0x20A0010:
0005f4 8518      	LDD  R17,Y+8
                 _0x20A0011:
0005f5 2fe1      	MOV  R30,R17
0005f6 5011      	SUBI R17,1
0005f7 30e0      	CPI  R30,0
0005f8 f021      	BREQ _0x20A0013
0005f9 d192      	RCALL SUBOPT_0x29
0005fa d0f1      	RCALL SUBOPT_0x10
0005fb d195      	RCALL SUBOPT_0x2A
0005fc cff8      	RJMP _0x20A0011
                 _0x20A0013:
0005fd d198      	RCALL SUBOPT_0x2B
0005fe 940e 0854 	CALL __ADDF12
000600 d17f      	RCALL SUBOPT_0x27
000601 e010      	LDI  R17,LOW(0)
                +
000602 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000603 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000604 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000605 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000606 d18a      	RCALL SUBOPT_0x2A
                 _0x20A0014:
000607 d18e      	RCALL SUBOPT_0x2B
000608 940e 0937 	CALL __CMPF12
00060a f068      	BRLO _0x20A0016
00060b d180      	RCALL SUBOPT_0x29
00060c d0cc      	RCALL SUBOPT_0xD
00060d d183      	RCALL SUBOPT_0x2A
00060e 5f1f      	SUBI R17,-LOW(1)
00060f 3217      	CPI  R17,39
000610 f030      	BRLO _0x20A0017
000611 d169      	RCALL SUBOPT_0x26
                +
000612 e7af     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000613 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000614 940e 0557 	CALL _strcpyf
000616 c043      	RJMP _0x20C0002
                 _0x20A0017:
000617 cfef      	RJMP _0x20A0014
                 _0x20A0016:
000618 3010      	CPI  R17,0
000619 f421      	BRNE _0x20A0018
00061a d16a      	RCALL SUBOPT_0x28
00061b e3e0      	LDI  R30,LOW(48)
00061c 93ec      	ST   X,R30
00061d c01c      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
00061e 2fe1      	MOV  R30,R17
00061f 5011      	SUBI R17,1
000620 30e0      	CPI  R30,0
000621 f0c1      	BREQ _0x20A001C
000622 d169      	RCALL SUBOPT_0x29
000623 d0c8      	RCALL SUBOPT_0x10
000624 d0c0      	RCALL SUBOPT_0xF
000625 01df      	MOVW R26,R30
000626 01cb      	MOVW R24,R22
000627 940e 05ae 	CALL _floor
000629 d167      	RCALL SUBOPT_0x2A
00062a d16b      	RCALL SUBOPT_0x2B
00062b 940e 08f2 	CALL __DIVF21
00062d 940e 07e1 	CALL __CFD1U
00062f 2f0e      	MOV  R16,R30
000630 d154      	RCALL SUBOPT_0x28
000631 d0c8      	RCALL SUBOPT_0x12
000632 d159      	RCALL SUBOPT_0x29
000633 d0cb      	RCALL SUBOPT_0x13
000634 940e 08a4 	CALL __MULF12
000636 d168      	RCALL SUBOPT_0x2C
000637 d0cd      	RCALL SUBOPT_0x14
000638 d147      	RCALL SUBOPT_0x27
000639 cfe4      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
00063a 85e8      	LDD  R30,Y+8
00063b 30e0      	CPI  R30,0
00063c f0c9      	BREQ _0x20C0001
00063d d147      	RCALL SUBOPT_0x28
00063e e2ee      	LDI  R30,LOW(46)
00063f 93ec      	ST   X,R30
                 _0x20A001E:
000640 85e8      	LDD  R30,Y+8
000641 50e1      	SUBI R30,LOW(1)
000642 87e8      	STD  Y+8,R30
000643 5fef      	SUBI R30,-LOW(1)
000644 f089      	BREQ _0x20A0020
000645 d159      	RCALL SUBOPT_0x2C
000646 d092      	RCALL SUBOPT_0xD
000647 d138      	RCALL SUBOPT_0x27
                +
000648 85e9     +LDD R30 , Y + 9
000649 85fa     +LDD R31 , Y + 9 + 1
00064a 856b     +LDD R22 , Y + 9 + 2
00064b 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00064c 940e 07e1 	CALL __CFD1U
00064e 2f0e      	MOV  R16,R30
00064f d135      	RCALL SUBOPT_0x28
000650 d0a9      	RCALL SUBOPT_0x12
000651 d14d      	RCALL SUBOPT_0x2C
000652 d0ac      	RCALL SUBOPT_0x13
000653 d0b1      	RCALL SUBOPT_0x14
000654 d12b      	RCALL SUBOPT_0x27
000655 cfea      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000656 81ae      	LDD  R26,Y+6
000657 81bf      	LDD  R27,Y+6+1
000658 e0e0      	LDI  R30,LOW(0)
000659 93ec      	ST   X,R30
                 _0x20C0002:
00065a 8119      	LDD  R17,Y+1
00065b 8108      	LDD  R16,Y+0
00065c 962d      	ADIW R28,13
00065d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _f:
000260           	.BYTE 0x4
                 __base_y_G101:
000264           	.BYTE 0x4
                 __seed_G105:
000268           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x0:
00065e 91a0 0260 	LDS  R26,_f
000660 91b0 0261 	LDS  R27,_f+1
000662 9180 0262 	LDS  R24,_f+2
000664 9190 0263 	LDS  R25,_f+3
000666 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1:
000667 91e0 0260 	LDS  R30,_f
000669 91f0 0261 	LDS  R31,_f+1
00066b 9160 0262 	LDS  R22,_f+2
00066d 9170 0263 	LDS  R23,_f+3
00066f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
000670 e0e0      	LDI  R30,LOW(0)
000671 e0f0      	LDI  R31,HIGH(0)
000672 bdfd      	OUT  0x2C+1,R31
000673 bdec      	OUT  0x2C,R30
000674 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000675 940e 07a4 	CALL _delay_ms
000677 e0e0      	LDI  R30,LOW(0)
000678 bdee      	OUT  0x2E,R30
000679 b5ec      	IN   R30,0x2C
00067a b5fd      	IN   R31,0x2C+1
00067b e6a0      	LDI  R26,LOW(_f)
00067c e0b2      	LDI  R27,HIGH(_f)
00067d 2766      	CLR  R22
00067e 2777      	CLR  R23
00067f 940e 081a 	CALL __CDF1
000681 940e 09cc 	CALL __PUTDP1
000683 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000684 dfd9      	RCALL SUBOPT_0x0
                +
000685 e0e0     +LDI R30 , LOW ( 0x461C4000 )
000686 e4f0     +LDI R31 , HIGH ( 0x461C4000 )
000687 e16c     +LDI R22 , BYTE3 ( 0x461C4000 )
000688 e476     +LDI R23 , BYTE4 ( 0x461C4000 )
                 	__GETD1N 0x461C4000
000689 940e 0937 	CALL __CMPF12
00068b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x5:
00068c dfda      	RCALL SUBOPT_0x1
00068d dfd0      	RCALL SUBOPT_0x0
00068e 940e 0854 	CALL __ADDF12
000690 93e0 0260 	STS  _f,R30
000692 93f0 0261 	STS  _f+1,R31
000694 9360 0262 	STS  _f+2,R22
000696 9370 0263 	STS  _f+3,R23
000698 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000699 dfc4      	RCALL SUBOPT_0x0
                +
00069a e0e0     +LDI R30 , LOW ( 0x48127C00 )
00069b e7fc     +LDI R31 , HIGH ( 0x48127C00 )
00069c e162     +LDI R22 , BYTE3 ( 0x48127C00 )
00069d e478     +LDI R23 , BYTE4 ( 0x48127C00 )
                 	__GETD1N 0x48127C00
00069e 940e 0937 	CALL __CMPF12
0006a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0006a1 91ed      	LD   R30,X+
0006a2 91fd      	LD   R31,X+
0006a3 9631      	ADIW R30,1
0006a4 93fe      	ST   -X,R31
0006a5 93ee      	ST   -X,R30
0006a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
0006a7 93ba      	ST   -Y,R27
0006a8 93aa      	ST   -Y,R26
0006a9 9724      	SBIW R28,4
0006aa e0e0      	LDI  R30,LOW(0)
0006ab 83e8      	ST   Y,R30
0006ac 83e9      	STD  Y+1,R30
0006ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x9:
                +
0006ae 81ac     +LDD R26 , Y + 4
0006af 81bd     +LDD R27 , Y + 4 + 1
0006b0 818e     +LDD R24 , Y + 4 + 2
0006b1 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0006b2 e0e0     +LDI R30 , LOW ( 0x41200000 )
0006b3 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006b4 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006b5 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006b6 940e 08a4 	CALL __MULF12
                +
0006b8 83ec     +STD Y + 4 , R30
0006b9 83fd     +STD Y + 4 + 1 , R31
0006ba 836e     +STD Y + 4 + 2 , R22
0006bb 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0006bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xA:
                +
0006bd 81ec     +LDD R30 , Y + 4
0006be 81fd     +LDD R31 , Y + 4 + 1
0006bf 816e     +LDD R22 , Y + 4 + 2
0006c0 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0006c1 85ac     +LDD R26 , Y + 12
0006c2 85bd     +LDD R27 , Y + 12 + 1
0006c3 858e     +LDD R24 , Y + 12 + 2
0006c4 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0006c5 940e 0937 	CALL __CMPF12
0006c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
                +
0006c8 85ac     +LDD R26 , Y + 12
0006c9 85bd     +LDD R27 , Y + 12 + 1
0006ca 858e     +LDD R24 , Y + 12 + 2
0006cb 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0006cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xC:
                +
0006cd eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006ce ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006cf ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006d0 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006d1 940e 08a4 	CALL __MULF12
                +
0006d3 87ec     +STD Y + 12 , R30
0006d4 87fd     +STD Y + 12 + 1 , R31
0006d5 876e     +STD Y + 12 + 2 , R22
0006d6 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006d7 5f3f      	SUBI R19,-LOW(1)
0006d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
0006d9 e0e0     +LDI R30 , LOW ( 0x41200000 )
0006da e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006db e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006dc e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006dd 940e 08a4 	CALL __MULF12
0006df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
                +
0006e0 87ec     +STD Y + 12 , R30
0006e1 87fd     +STD Y + 12 + 1 , R31
0006e2 876e     +STD Y + 12 + 2 , R22
0006e3 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
                +
0006e5 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0006e6 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0006e7 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0006e8 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0006e9 940e 0854 	CALL __ADDF12
0006eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
                +
0006ec eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006ed ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006ee ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006ef e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006f0 940e 08a4 	CALL __MULF12
0006f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
0006f3 85a8      	LDD  R26,Y+8
0006f4 85b9      	LDD  R27,Y+8+1
0006f5 9611      	ADIW R26,1
0006f6 87a8      	STD  Y+8,R26
0006f7 87b9      	STD  Y+8+1,R27
0006f8 9711      	SBIW R26,1
0006f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
0006fa 2fe0      	MOV  R30,R16
0006fb 5de0      	SUBI R30,-LOW(48)
0006fc 93ec      	ST   X,R30
0006fd 2fe0      	MOV  R30,R16
0006fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
0006ff 27ff      	CLR  R31
000700 2766      	CLR  R22
000701 2777      	CLR  R23
000702 940e 081a 	CALL __CDF1
000704 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000705 940e 09ea 	CALL __SWAPD12
000707 940e 084d 	CALL __SUBF12
000709 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
00070a 85e8      	LDD  R30,Y+8
00070b 85f9      	LDD  R31,Y+8+1
00070c 9631      	ADIW R30,1
00070d 87e8      	STD  Y+8,R30
00070e 87f9      	STD  Y+8+1,R31
00070f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x16:
000710 932a      	ST   -Y,R18
000711 81af      	LDD  R26,Y+7
000712 85b8      	LDD  R27,Y+7+1
000713 85e9      	LDD  R30,Y+9
000714 85fa      	LDD  R31,Y+9+1
000715 9509      	ICALL
000716 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x17:
                +
000717 01fe     +MOVW R30 , R28
000718 5ae6     +SUBI R30 , LOW ( - 90 )
000719 4fff     +SBCI R31 , HIGH ( - 90 )
00071a 9001     +LD R0 , Z +
00071b 81f0     +LD R31 , Z
00071c 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00071d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x18:
00071e 9734      	SBIW R30,4
                +
00071f 01de     +MOVW R26 , R28
000720 5aa6     +SUBI R26 , LOW ( - 90 )
000721 4fbf     +SBCI R27 , HIGH ( - 90 )
000722 93ed     +ST X + , R30
000723 93fc     +ST X , R31
                 	__PUTW1SX 90
000724 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x19:
000725 81af      	LDD  R26,Y+7
000726 85b8      	LDD  R27,Y+7+1
000727 85e9      	LDD  R30,Y+9
000728 85fa      	LDD  R31,Y+9+1
000729 9509      	ICALL
00072a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1A:
                +
00072b 01de     +MOVW R26 , R28
00072c 5aa6     +SUBI R26 , LOW ( - 90 )
00072d 4fbf     +SBCI R27 , HIGH ( - 90 )
00072e 900d     +LD R0 , X +
00072f 91bc     +LD R27 , X
000730 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000731 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
000732 87ea     +STD Y + 10 , R30
000733 87fb     +STD Y + 10 + 1 , R31
000734 876c     +STD Y + 10 + 2 , R22
000735 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000736 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C:
000737 dfdf      	RCALL SUBOPT_0x17
000738 cfe5      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
000739 85ea     +LDD R30 , Y + 10
00073a 85fb     +LDD R31 , Y + 10 + 1
00073b 856c     +LDD R22 , Y + 10 + 2
00073c 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00073d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E:
00073e 87ee      	STD  Y+14,R30
00073f 87ff      	STD  Y+14+1,R31
000740 85ae      	LDD  R26,Y+14
000741 85bf      	LDD  R27,Y+14+1
000742 940e 0564 	CALL _strlen
000744 2f1e      	MOV  R17,R30
000745 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F:
000746 dfe4      	RCALL SUBOPT_0x1A
000747 9614      	ADIW R26,4
000748 940e 09c2 	CALL __GETW1P
00074a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
                +
00074b 8be8     +STD Y + 16 , R30
00074c 8bf9     +STD Y + 16 + 1 , R31
00074d 8b6a     +STD Y + 16 + 2 , R22
00074e 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00074f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x21:
000750 7f0b      	ANDI R16,LOW(251)
000751 89ed      	LDD  R30,Y+21
000752 93ea      	ST   -Y,R30
                +
000753 01de     +MOVW R26 , R28
000754 5aa9     +SUBI R26 , LOW ( - 87 )
000755 4fbf     +SBCI R27 , HIGH ( - 87 )
000756 900d     +LD R0 , X +
000757 91bc     +LD R27 , X
000758 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000759 01fe     +MOVW R30 , R28
00075a 5ae7     +SUBI R30 , LOW ( - 89 )
00075b 4fff     +SBCI R31 , HIGH ( - 89 )
00075c 9001     +LD R0 , Z +
00075d 81f0     +LD R31 , Z
00075e 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00075f 9509      	ICALL
000760 3050      	CPI  R21,0
000761 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
000762 89e8     +LDD R30 , Y + 16
000763 89f9     +LDD R31 , Y + 16 + 1
000764 896a     +LDD R22 , Y + 16 + 2
000765 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000766 85aa     +LDD R26 , Y + 10
000767 85bb     +LDD R27 , Y + 10 + 1
000768 858c     +LDD R24 , Y + 10 + 2
000769 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00076a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
00076b 01de      	MOVW R26,R28
00076c 961c      	ADIW R26,12
00076d 940e 0957 	CALL __ADDW2R15
00076f 940e 09c2 	CALL __GETW1P
000771 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
000772 940e 0513 	CALL __long_delay_G101
000774 e3a0      	LDI  R26,LOW(48)
000775 940c 0518 	JMP  __lcd_init_write_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000777 940e 0493 	CALL __lcd_write_data
000779 940c 0513 	JMP  __long_delay_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
00077b 81ee      	LDD  R30,Y+6
00077c 81ff      	LDD  R31,Y+6+1
00077d 93fa      	ST   -Y,R31
00077e 93ea      	ST   -Y,R30
00077f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
                +
000780 87e9     +STD Y + 9 , R30
000781 87fa     +STD Y + 9 + 1 , R31
000782 876b     +STD Y + 9 + 2 , R22
000783 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000784 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x28:
000785 81ae      	LDD  R26,Y+6
000786 81bf      	LDD  R27,Y+6+1
000787 9611      	ADIW R26,1
000788 83ae      	STD  Y+6,R26
000789 83bf      	STD  Y+6+1,R27
00078a 9711      	SBIW R26,1
00078b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29:
                +
00078c 81aa     +LDD R26 , Y + 2
00078d 81bb     +LDD R27 , Y + 2 + 1
00078e 818c     +LDD R24 , Y + 2 + 2
00078f 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000790 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
                +
000791 83ea     +STD Y + 2 , R30
000792 83fb     +STD Y + 2 + 1 , R31
000793 836c     +STD Y + 2 + 2 , R22
000794 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000795 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
                +
000796 81ea     +LDD R30 , Y + 2
000797 81fb     +LDD R31 , Y + 2 + 1
000798 816c     +LDD R22 , Y + 2 + 2
000799 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00079a 85a9     +LDD R26 , Y + 9
00079b 85ba     +LDD R27 , Y + 9 + 1
00079c 858b     +LDD R24 , Y + 9 + 2
00079d 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00079e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
                +
00079f 85a9     +LDD R26 , Y + 9
0007a0 85ba     +LDD R27 , Y + 9 + 1
0007a1 858b     +LDD R24 , Y + 9 + 2
0007a2 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0007a3 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0007a4 9610      	adiw r26,0
0007a5 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0007a6 ed80     +LDI R24 , LOW ( 0x7D0 )
0007a7 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0007a8 9701     +SBIW R24 , 1
0007a9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0007aa 95a8      	wdr
0007ab 9711      	sbiw r26,1
0007ac f7c9      	brne __delay_ms0
                 __delay_ms1:
0007ad 9508      	ret
                 
                 __ANEGF1:
0007ae 9730      	SBIW R30,0
0007af 4060      	SBCI R22,0
0007b0 4070      	SBCI R23,0
0007b1 f009      	BREQ __ANEGF10
0007b2 5870      	SUBI R23,0x80
                 __ANEGF10:
0007b3 9508      	RET
                 
                 __ROUND_REPACK:
0007b4 2355      	TST  R21
0007b5 f442      	BRPL __REPACK
0007b6 3850      	CPI  R21,0x80
0007b7 f411      	BRNE __ROUND_REPACK0
0007b8 ffe0      	SBRS R30,0
0007b9 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0007ba 9631      	ADIW R30,1
0007bb 1f69      	ADC  R22,R25
0007bc 1f79      	ADC  R23,R25
0007bd f06b      	BRVS __REPACK1
                 
                 __REPACK:
0007be e850      	LDI  R21,0x80
0007bf 2757      	EOR  R21,R23
0007c0 f411      	BRNE __REPACK0
0007c1 935f      	PUSH R21
0007c2 c0cf      	RJMP __ZERORES
                 __REPACK0:
0007c3 3f5f      	CPI  R21,0xFF
0007c4 f031      	BREQ __REPACK1
0007c5 0f66      	LSL  R22
0007c6 0c00      	LSL  R0
0007c7 9557      	ROR  R21
0007c8 9567      	ROR  R22
0007c9 2f75      	MOV  R23,R21
0007ca 9508      	RET
                 __REPACK1:
0007cb 935f      	PUSH R21
0007cc 2000      	TST  R0
0007cd f00a      	BRMI __REPACK2
0007ce c0cf      	RJMP __MAXRES
                 __REPACK2:
0007cf c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0007d0 e850      	LDI  R21,0x80
0007d1 2e19      	MOV  R1,R25
0007d2 2215      	AND  R1,R21
0007d3 0f88      	LSL  R24
0007d4 1f99      	ROL  R25
0007d5 2795      	EOR  R25,R21
0007d6 0f55      	LSL  R21
0007d7 9587      	ROR  R24
                 
                 __UNPACK1:
0007d8 e850      	LDI  R21,0x80
0007d9 2e07      	MOV  R0,R23
0007da 2205      	AND  R0,R21
0007db 0f66      	LSL  R22
0007dc 1f77      	ROL  R23
0007dd 2775      	EOR  R23,R21
0007de 0f55      	LSL  R21
0007df 9567      	ROR  R22
0007e0 9508      	RET
                 
                 __CFD1U:
0007e1 9468      	SET
0007e2 c001      	RJMP __CFD1U0
                 __CFD1:
0007e3 94e8      	CLT
                 __CFD1U0:
0007e4 935f      	PUSH R21
0007e5 dff2      	RCALL __UNPACK1
0007e6 3870      	CPI  R23,0x80
0007e7 f018      	BRLO __CFD10
0007e8 3f7f      	CPI  R23,0xFF
0007e9 f408      	BRCC __CFD10
0007ea c0a7      	RJMP __ZERORES
                 __CFD10:
0007eb e156      	LDI  R21,22
0007ec 1b57      	SUB  R21,R23
0007ed f4aa      	BRPL __CFD11
0007ee 9551      	NEG  R21
0007ef 3058      	CPI  R21,8
0007f0 f40e      	BRTC __CFD19
0007f1 3059      	CPI  R21,9
                 __CFD19:
0007f2 f030      	BRLO __CFD17
0007f3 efef      	SER  R30
0007f4 efff      	SER  R31
0007f5 ef6f      	SER  R22
0007f6 e77f      	LDI  R23,0x7F
0007f7 f977      	BLD  R23,7
0007f8 c01a      	RJMP __CFD15
                 __CFD17:
0007f9 2777      	CLR  R23
0007fa 2355      	TST  R21
0007fb f0b9      	BREQ __CFD15
                 __CFD18:
0007fc 0fee      	LSL  R30
0007fd 1fff      	ROL  R31
0007fe 1f66      	ROL  R22
0007ff 1f77      	ROL  R23
000800 955a      	DEC  R21
000801 f7d1      	BRNE __CFD18
000802 c010      	RJMP __CFD15
                 __CFD11:
000803 2777      	CLR  R23
                 __CFD12:
000804 3058      	CPI  R21,8
000805 f028      	BRLO __CFD13
000806 2fef      	MOV  R30,R31
000807 2ff6      	MOV  R31,R22
000808 2f67      	MOV  R22,R23
000809 5058      	SUBI R21,8
00080a cff9      	RJMP __CFD12
                 __CFD13:
00080b 2355      	TST  R21
00080c f031      	BREQ __CFD15
                 __CFD14:
00080d 9576      	LSR  R23
00080e 9567      	ROR  R22
00080f 95f7      	ROR  R31
000810 95e7      	ROR  R30
000811 955a      	DEC  R21
000812 f7d1      	BRNE __CFD14
                 __CFD15:
000813 2000      	TST  R0
000814 f40a      	BRPL __CFD16
000815 d145      	RCALL __ANEGD1
                 __CFD16:
000816 915f      	POP  R21
000817 9508      	RET
                 
                 __CDF1U:
000818 9468      	SET
000819 c001      	RJMP __CDF1U0
                 __CDF1:
00081a 94e8      	CLT
                 __CDF1U0:
00081b 9730      	SBIW R30,0
00081c 4060      	SBCI R22,0
00081d 4070      	SBCI R23,0
00081e f0b1      	BREQ __CDF10
00081f 2400      	CLR  R0
000820 f026      	BRTS __CDF11
000821 2377      	TST  R23
000822 f412      	BRPL __CDF11
000823 9400      	COM  R0
000824 d136      	RCALL __ANEGD1
                 __CDF11:
000825 2e17      	MOV  R1,R23
000826 e17e      	LDI  R23,30
000827 2011      	TST  R1
                 __CDF12:
000828 f032      	BRMI __CDF13
000829 957a      	DEC  R23
00082a 0fee      	LSL  R30
00082b 1fff      	ROL  R31
00082c 1f66      	ROL  R22
00082d 1c11      	ROL  R1
00082e cff9      	RJMP __CDF12
                 __CDF13:
00082f 2fef      	MOV  R30,R31
000830 2ff6      	MOV  R31,R22
000831 2d61      	MOV  R22,R1
000832 935f      	PUSH R21
000833 df8a      	RCALL __REPACK
000834 915f      	POP  R21
                 __CDF10:
000835 9508      	RET
                 
                 __SWAPACC:
000836 934f      	PUSH R20
000837 01af      	MOVW R20,R30
000838 01fd      	MOVW R30,R26
000839 01da      	MOVW R26,R20
00083a 01ab      	MOVW R20,R22
00083b 01bc      	MOVW R22,R24
00083c 01ca      	MOVW R24,R20
00083d 2d40      	MOV  R20,R0
00083e 2c01      	MOV  R0,R1
00083f 2e14      	MOV  R1,R20
000840 914f      	POP  R20
000841 9508      	RET
                 
                 __UADD12:
000842 0fea      	ADD  R30,R26
000843 1ffb      	ADC  R31,R27
000844 1f68      	ADC  R22,R24
000845 9508      	RET
                 
                 __NEGMAN1:
000846 95e0      	COM  R30
000847 95f0      	COM  R31
000848 9560      	COM  R22
000849 5fef      	SUBI R30,-1
00084a 4fff      	SBCI R31,-1
00084b 4f6f      	SBCI R22,-1
00084c 9508      	RET
                 
                 __SUBF12:
00084d 935f      	PUSH R21
00084e df81      	RCALL __UNPACK
00084f 3890      	CPI  R25,0x80
000850 f171      	BREQ __ADDF129
000851 e850      	LDI  R21,0x80
000852 2615      	EOR  R1,R21
                 
000853 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000854 935f      	PUSH R21
000855 df7a      	RCALL __UNPACK
000856 3890      	CPI  R25,0x80
000857 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000858 3870      	CPI  R23,0x80
000859 f121      	BREQ __ADDF128
                 __ADDF121:
00085a 2f57      	MOV  R21,R23
00085b 1b59      	SUB  R21,R25
00085c f12b      	BRVS __ADDF1211
00085d f412      	BRPL __ADDF122
00085e dfd7      	RCALL __SWAPACC
00085f cffa      	RJMP __ADDF121
                 __ADDF122:
000860 3158      	CPI  R21,24
000861 f018      	BRLO __ADDF123
000862 27aa      	CLR  R26
000863 27bb      	CLR  R27
000864 2788      	CLR  R24
                 __ADDF123:
000865 3058      	CPI  R21,8
000866 f028      	BRLO __ADDF124
000867 2fab      	MOV  R26,R27
000868 2fb8      	MOV  R27,R24
000869 2788      	CLR  R24
00086a 5058      	SUBI R21,8
00086b cff9      	RJMP __ADDF123
                 __ADDF124:
00086c 2355      	TST  R21
00086d f029      	BREQ __ADDF126
                 __ADDF125:
00086e 9586      	LSR  R24
00086f 95b7      	ROR  R27
000870 95a7      	ROR  R26
000871 955a      	DEC  R21
000872 f7d9      	BRNE __ADDF125
                 __ADDF126:
000873 2d50      	MOV  R21,R0
000874 2551      	EOR  R21,R1
000875 f072      	BRMI __ADDF127
000876 dfcb      	RCALL __UADD12
000877 f438      	BRCC __ADDF129
000878 9567      	ROR  R22
000879 95f7      	ROR  R31
00087a 95e7      	ROR  R30
00087b 9573      	INC  R23
00087c f413      	BRVC __ADDF129
00087d c020      	RJMP __MAXRES
                 __ADDF128:
00087e dfb7      	RCALL __SWAPACC
                 __ADDF129:
00087f df3e      	RCALL __REPACK
000880 915f      	POP  R21
000881 9508      	RET
                 __ADDF1211:
000882 f7d8      	BRCC __ADDF128
000883 cffb      	RJMP __ADDF129
                 __ADDF127:
000884 1bea      	SUB  R30,R26
000885 0bfb      	SBC  R31,R27
000886 0b68      	SBC  R22,R24
000887 f051      	BREQ __ZERORES
000888 f410      	BRCC __ADDF1210
000889 9400      	COM  R0
00088a dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00088b 2366      	TST  R22
00088c f392      	BRMI __ADDF129
00088d 0fee      	LSL  R30
00088e 1fff      	ROL  R31
00088f 1f66      	ROL  R22
000890 957a      	DEC  R23
000891 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000892 27ee      	CLR  R30
000893 27ff      	CLR  R31
000894 2766      	CLR  R22
000895 2777      	CLR  R23
000896 915f      	POP  R21
000897 9508      	RET
                 
                 __MINRES:
000898 efef      	SER  R30
000899 efff      	SER  R31
00089a e76f      	LDI  R22,0x7F
00089b ef7f      	SER  R23
00089c 915f      	POP  R21
00089d 9508      	RET
                 
                 __MAXRES:
00089e efef      	SER  R30
00089f efff      	SER  R31
0008a0 e76f      	LDI  R22,0x7F
0008a1 e77f      	LDI  R23,0x7F
0008a2 915f      	POP  R21
0008a3 9508      	RET
                 
                 __MULF12:
0008a4 935f      	PUSH R21
0008a5 df2a      	RCALL __UNPACK
0008a6 3870      	CPI  R23,0x80
0008a7 f351      	BREQ __ZERORES
0008a8 3890      	CPI  R25,0x80
0008a9 f341      	BREQ __ZERORES
0008aa 2401      	EOR  R0,R1
0008ab 9408      	SEC
0008ac 1f79      	ADC  R23,R25
0008ad f423      	BRVC __MULF124
0008ae f31c      	BRLT __ZERORES
                 __MULF125:
0008af 2000      	TST  R0
0008b0 f33a      	BRMI __MINRES
0008b1 cfec      	RJMP __MAXRES
                 __MULF124:
0008b2 920f      	PUSH R0
0008b3 931f      	PUSH R17
0008b4 932f      	PUSH R18
0008b5 933f      	PUSH R19
0008b6 934f      	PUSH R20
0008b7 2711      	CLR  R17
0008b8 2722      	CLR  R18
0008b9 2799      	CLR  R25
0008ba 9f68      	MUL  R22,R24
0008bb 01a0      	MOVW R20,R0
0008bc 9f8f      	MUL  R24,R31
0008bd 2d30      	MOV  R19,R0
0008be 0d41      	ADD  R20,R1
0008bf 1f59      	ADC  R21,R25
0008c0 9f6b      	MUL  R22,R27
0008c1 0d30      	ADD  R19,R0
0008c2 1d41      	ADC  R20,R1
0008c3 1f59      	ADC  R21,R25
0008c4 9f8e      	MUL  R24,R30
0008c5 d027      	RCALL __MULF126
0008c6 9fbf      	MUL  R27,R31
0008c7 d025      	RCALL __MULF126
0008c8 9f6a      	MUL  R22,R26
0008c9 d023      	RCALL __MULF126
0008ca 9fbe      	MUL  R27,R30
0008cb d01d      	RCALL __MULF127
0008cc 9faf      	MUL  R26,R31
0008cd d01b      	RCALL __MULF127
0008ce 9fae      	MUL  R26,R30
0008cf 0d11      	ADD  R17,R1
0008d0 1f29      	ADC  R18,R25
0008d1 1f39      	ADC  R19,R25
0008d2 1f49      	ADC  R20,R25
0008d3 1f59      	ADC  R21,R25
0008d4 2fe3      	MOV  R30,R19
0008d5 2ff4      	MOV  R31,R20
0008d6 2f65      	MOV  R22,R21
0008d7 2f52      	MOV  R21,R18
0008d8 914f      	POP  R20
0008d9 913f      	POP  R19
0008da 912f      	POP  R18
0008db 911f      	POP  R17
0008dc 900f      	POP  R0
0008dd 2366      	TST  R22
0008de f02a      	BRMI __MULF122
0008df 0f55      	LSL  R21
0008e0 1fee      	ROL  R30
0008e1 1fff      	ROL  R31
0008e2 1f66      	ROL  R22
0008e3 c002      	RJMP __MULF123
                 __MULF122:
0008e4 9573      	INC  R23
0008e5 f24b      	BRVS __MULF125
                 __MULF123:
0008e6 decd      	RCALL __ROUND_REPACK
0008e7 915f      	POP  R21
0008e8 9508      	RET
                 
                 __MULF127:
0008e9 0d10      	ADD  R17,R0
0008ea 1d21      	ADC  R18,R1
0008eb 1f39      	ADC  R19,R25
0008ec c002      	RJMP __MULF128
                 __MULF126:
0008ed 0d20      	ADD  R18,R0
0008ee 1d31      	ADC  R19,R1
                 __MULF128:
0008ef 1f49      	ADC  R20,R25
0008f0 1f59      	ADC  R21,R25
0008f1 9508      	RET
                 
                 __DIVF21:
0008f2 935f      	PUSH R21
0008f3 dedc      	RCALL __UNPACK
0008f4 3870      	CPI  R23,0x80
0008f5 f421      	BRNE __DIVF210
0008f6 2011      	TST  R1
                 __DIVF211:
0008f7 f40a      	BRPL __DIVF219
0008f8 cf9f      	RJMP __MINRES
                 __DIVF219:
0008f9 cfa4      	RJMP __MAXRES
                 __DIVF210:
0008fa 3890      	CPI  R25,0x80
0008fb f409      	BRNE __DIVF218
                 __DIVF217:
0008fc cf95      	RJMP __ZERORES
                 __DIVF218:
0008fd 2401      	EOR  R0,R1
0008fe 9408      	SEC
0008ff 0b97      	SBC  R25,R23
000900 f41b      	BRVC __DIVF216
000901 f3d4      	BRLT __DIVF217
000902 2000      	TST  R0
000903 cff3      	RJMP __DIVF211
                 __DIVF216:
000904 2f79      	MOV  R23,R25
000905 931f      	PUSH R17
000906 932f      	PUSH R18
000907 933f      	PUSH R19
000908 934f      	PUSH R20
000909 2411      	CLR  R1
00090a 2711      	CLR  R17
00090b 2722      	CLR  R18
00090c 2733      	CLR  R19
00090d 2744      	CLR  R20
00090e 2755      	CLR  R21
00090f e290      	LDI  R25,32
                 __DIVF212:
000910 17ae      	CP   R26,R30
000911 07bf      	CPC  R27,R31
000912 0786      	CPC  R24,R22
000913 0741      	CPC  R20,R17
000914 f030      	BRLO __DIVF213
000915 1bae      	SUB  R26,R30
000916 0bbf      	SBC  R27,R31
000917 0b86      	SBC  R24,R22
000918 0b41      	SBC  R20,R17
000919 9408      	SEC
00091a c001      	RJMP __DIVF214
                 __DIVF213:
00091b 9488      	CLC
                 __DIVF214:
00091c 1f55      	ROL  R21
00091d 1f22      	ROL  R18
00091e 1f33      	ROL  R19
00091f 1c11      	ROL  R1
000920 1faa      	ROL  R26
000921 1fbb      	ROL  R27
000922 1f88      	ROL  R24
000923 1f44      	ROL  R20
000924 959a      	DEC  R25
000925 f751      	BRNE __DIVF212
000926 01f9      	MOVW R30,R18
000927 2d61      	MOV  R22,R1
000928 914f      	POP  R20
000929 913f      	POP  R19
00092a 912f      	POP  R18
00092b 911f      	POP  R17
00092c 2366      	TST  R22
00092d f032      	BRMI __DIVF215
00092e 0f55      	LSL  R21
00092f 1fee      	ROL  R30
000930 1fff      	ROL  R31
000931 1f66      	ROL  R22
000932 957a      	DEC  R23
000933 f243      	BRVS __DIVF217
                 __DIVF215:
000934 de7f      	RCALL __ROUND_REPACK
000935 915f      	POP  R21
000936 9508      	RET
                 
                 __CMPF12:
000937 2399      	TST  R25
000938 f09a      	BRMI __CMPF120
000939 2377      	TST  R23
00093a f042      	BRMI __CMPF121
00093b 1797      	CP   R25,R23
00093c f048      	BRLO __CMPF122
00093d f429      	BRNE __CMPF121
00093e 17ae      	CP   R26,R30
00093f 07bf      	CPC  R27,R31
000940 0786      	CPC  R24,R22
000941 f020      	BRLO __CMPF122
000942 f031      	BREQ __CMPF123
                 __CMPF121:
000943 9498      	CLZ
000944 9488      	CLC
000945 9508      	RET
                 __CMPF122:
000946 9498      	CLZ
000947 9408      	SEC
000948 9508      	RET
                 __CMPF123:
000949 9418      	SEZ
00094a 9488      	CLC
00094b 9508      	RET
                 __CMPF120:
00094c 2377      	TST  R23
00094d f7c2      	BRPL __CMPF122
00094e 1797      	CP   R25,R23
00094f f398      	BRLO __CMPF121
000950 f7a9      	BRNE __CMPF122
000951 17ea      	CP   R30,R26
000952 07fb      	CPC  R31,R27
000953 0768      	CPC  R22,R24
000954 f388      	BRLO __CMPF122
000955 f399      	BREQ __CMPF123
000956 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000957 2400      	CLR  R0
000958 0daf      	ADD  R26,R15
000959 1db0      	ADC  R27,R0
00095a 9508      	RET
                 
                 __ANEGD1:
00095b 95f0      	COM  R31
00095c 9560      	COM  R22
00095d 9570      	COM  R23
00095e 95e1      	NEG  R30
00095f 4fff      	SBCI R31,-1
000960 4f6f      	SBCI R22,-1
000961 4f7f      	SBCI R23,-1
000962 9508      	RET
                 
                 __CBD1:
000963 2ffe      	MOV  R31,R30
000964 0fff      	ADD  R31,R31
000965 0bff      	SBC  R31,R31
000966 2f6f      	MOV  R22,R31
000967 2f7f      	MOV  R23,R31
000968 9508      	RET
                 
                 __CWD1:
000969 2f6f      	MOV  R22,R31
00096a 0f66      	ADD  R22,R22
00096b 0b66      	SBC  R22,R22
00096c 2f76      	MOV  R23,R22
00096d 9508      	RET
                 
                 __DIVB21U:
00096e 2400      	CLR  R0
00096f e098      	LDI  R25,8
                 __DIVB21U1:
000970 0faa      	LSL  R26
000971 1c00      	ROL  R0
000972 1a0e      	SUB  R0,R30
000973 f410      	BRCC __DIVB21U2
000974 0e0e      	ADD  R0,R30
000975 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000976 60a1      	SBR  R26,1
                 __DIVB21U3:
000977 959a      	DEC  R25
000978 f7b9      	BRNE __DIVB21U1
000979 2fea      	MOV  R30,R26
00097a 2da0      	MOV  R26,R0
00097b 9508      	RET
                 
                 __DIVB21:
00097c d039      	RCALL __CHKSIGNB
00097d dff0      	RCALL __DIVB21U
00097e f40e      	BRTC __DIVB211
00097f 95e1      	NEG  R30
                 __DIVB211:
000980 9508      	RET
                 
                 __DIVD21U:
000981 933f      	PUSH R19
000982 934f      	PUSH R20
000983 935f      	PUSH R21
000984 2400      	CLR  R0
000985 2411      	CLR  R1
000986 2744      	CLR  R20
000987 2755      	CLR  R21
000988 e230      	LDI  R19,32
                 __DIVD21U1:
000989 0faa      	LSL  R26
00098a 1fbb      	ROL  R27
00098b 1f88      	ROL  R24
00098c 1f99      	ROL  R25
00098d 1c00      	ROL  R0
00098e 1c11      	ROL  R1
00098f 1f44      	ROL  R20
000990 1f55      	ROL  R21
000991 1a0e      	SUB  R0,R30
000992 0a1f      	SBC  R1,R31
000993 0b46      	SBC  R20,R22
000994 0b57      	SBC  R21,R23
000995 f428      	BRCC __DIVD21U2
000996 0e0e      	ADD  R0,R30
000997 1e1f      	ADC  R1,R31
000998 1f46      	ADC  R20,R22
000999 1f57      	ADC  R21,R23
00099a c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00099b 60a1      	SBR  R26,1
                 __DIVD21U3:
00099c 953a      	DEC  R19
00099d f759      	BRNE __DIVD21U1
00099e 01fd      	MOVW R30,R26
00099f 01bc      	MOVW R22,R24
0009a0 01d0      	MOVW R26,R0
0009a1 01ca      	MOVW R24,R20
0009a2 915f      	POP  R21
0009a3 914f      	POP  R20
0009a4 913f      	POP  R19
0009a5 9508      	RET
                 
                 __MODB21:
0009a6 94e8      	CLT
0009a7 ffa7      	SBRS R26,7
0009a8 c002      	RJMP __MODB211
0009a9 95a1      	NEG  R26
0009aa 9468      	SET
                 __MODB211:
0009ab fde7      	SBRC R30,7
0009ac 95e1      	NEG  R30
0009ad dfc0      	RCALL __DIVB21U
0009ae 2fea      	MOV  R30,R26
0009af f40e      	BRTC __MODB212
0009b0 95e1      	NEG  R30
                 __MODB212:
0009b1 9508      	RET
                 
                 __MODD21U:
0009b2 dfce      	RCALL __DIVD21U
0009b3 01fd      	MOVW R30,R26
0009b4 01bc      	MOVW R22,R24
0009b5 9508      	RET
                 
                 __CHKSIGNB:
0009b6 94e8      	CLT
0009b7 ffe7      	SBRS R30,7
0009b8 c002      	RJMP __CHKSB1
0009b9 95e1      	NEG  R30
0009ba 9468      	SET
                 __CHKSB1:
0009bb ffa7      	SBRS R26,7
0009bc c004      	RJMP __CHKSB2
0009bd 95a1      	NEG  R26
0009be f800      	BLD  R0,0
0009bf 9403      	INC  R0
0009c0 fa00      	BST  R0,0
                 __CHKSB2:
0009c1 9508      	RET
                 
                 __GETW1P:
0009c2 91ed      	LD   R30,X+
0009c3 91fc      	LD   R31,X
0009c4 9711      	SBIW R26,1
0009c5 9508      	RET
                 
                 __GETD1P:
0009c6 91ed      	LD   R30,X+
0009c7 91fd      	LD   R31,X+
0009c8 916d      	LD   R22,X+
0009c9 917c      	LD   R23,X
0009ca 9713      	SBIW R26,3
0009cb 9508      	RET
                 
                 __PUTDP1:
0009cc 93ed      	ST   X+,R30
0009cd 93fd      	ST   X+,R31
0009ce 936d      	ST   X+,R22
0009cf 937c      	ST   X,R23
0009d0 9508      	RET
                 
                 __GETD1S0:
0009d1 81e8      	LD   R30,Y
0009d2 81f9      	LDD  R31,Y+1
0009d3 816a      	LDD  R22,Y+2
0009d4 817b      	LDD  R23,Y+3
0009d5 9508      	RET
                 
                 __GETD2S0:
0009d6 81a8      	LD   R26,Y
0009d7 81b9      	LDD  R27,Y+1
0009d8 818a      	LDD  R24,Y+2
0009d9 819b      	LDD  R25,Y+3
0009da 9508      	RET
                 
                 __PUTD1S0:
0009db 83e8      	ST   Y,R30
0009dc 83f9      	STD  Y+1,R31
0009dd 836a      	STD  Y+2,R22
0009de 837b      	STD  Y+3,R23
0009df 9508      	RET
                 
                 __PUTPARD1:
0009e0 937a      	ST   -Y,R23
0009e1 936a      	ST   -Y,R22
0009e2 93fa      	ST   -Y,R31
0009e3 93ea      	ST   -Y,R30
0009e4 9508      	RET
                 
                 __PUTPARD2:
0009e5 939a      	ST   -Y,R25
0009e6 938a      	ST   -Y,R24
0009e7 93ba      	ST   -Y,R27
0009e8 93aa      	ST   -Y,R26
0009e9 9508      	RET
                 
                 __SWAPD12:
0009ea 2e18      	MOV  R1,R24
0009eb 2f86      	MOV  R24,R22
0009ec 2d61      	MOV  R22,R1
0009ed 2e19      	MOV  R1,R25
0009ee 2f97      	MOV  R25,R23
0009ef 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0009f0 2e1b      	MOV  R1,R27
0009f1 2fbf      	MOV  R27,R31
0009f2 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0009f3 2e1a      	MOV  R1,R26
0009f4 2fae      	MOV  R26,R30
0009f5 2de1      	MOV  R30,R1
0009f6 9508      	RET
                 
                 __CPD10:
0009f7 9730      	SBIW R30,0
0009f8 4060      	SBCI R22,0
0009f9 4070      	SBCI R23,0
0009fa 9508      	RET
                 
                 __SAVELOCR6:
0009fb 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009fc 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009fd 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009fe 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009ff 931a      	ST   -Y,R17
000a00 930a      	ST   -Y,R16
000a01 9508      	RET
                 
                 __LOADLOCR6:
000a02 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000a03 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000a04 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000a05 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000a06 8119      	LDD  R17,Y+1
000a07 8108      	LD   R16,Y
000a08 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  63 r18:  48 r19:  35 r20:  50 r21:  90 r22: 115 r23: 101 
r24:  63 r25:  61 r26: 233 r27: 104 r28:  35 r29:   1 r30: 390 r31: 158 
x  :  44 y  : 376 z  :  25 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  34 and   :   5 andi  :  11 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   4 break :   0 breq  :  53 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  29 
brlt  :   2 brmi  :  11 brne  :  55 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 215 
cbi   :  11 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  51 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  82 cpse  :   0 dec   :  12 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :  10 inc   :   5 jmp   :  26 ld    :  48 ldd   : 193 ldi   : 220 
lds   :   8 lpm   :  14 lsl   :  14 lsr   :   3 mov   :  84 movw  :  51 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   2 
ori   :  10 out   :  25 pop   :  24 push  :  24 rcall :  89 ret   : 104 
reti  :   0 rjmp  : 147 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :  10 sbic  :   0 sbis  :   0 sbiw  :  31 sbr   :   4 sbrc  :   5 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 104 std   :  88 sts   :   6 sub   :   6 subi  :  48 swap  :   2 
tst   :  24 wdr   :   1 
Instructions used: 79 out of 116 (68.1%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001412   5076     62   5138   32768  15.7%
[.dseg] 0x000060 0x00026c      0     12     12    2048   0.6%
[.eseg] 0x000000 0x000001      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
